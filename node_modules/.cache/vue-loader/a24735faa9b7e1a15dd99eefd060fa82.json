{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\goods-manage\\goods.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\goods-manage\\goods.vue","mtime":1596434368974},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}