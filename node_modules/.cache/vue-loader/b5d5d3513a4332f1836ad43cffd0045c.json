{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\business-operation\\goods-output.vue?vue&type=style&index=0&id=663e2bfa&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\business-operation\\goods-output.vue","mtime":1593517269024},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXBwLWNvbnRhaW5lcnsKICB3aWR0aDogNDAlOwogIG1hcmdpbjogMTUwcHggYXV0bzsKfQo="},{"version":3,"sources":["goods-output.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA","file":"goods-output.vue","sourceRoot":"src/views/business-operation","sourcesContent":["<template>\r\n  <div class=\"app-container list\">\r\n    <el-form ref=\"formOut\" :rules=\"out.rules\" :model=\"out.models\" label-position=\"right\" :label-width=\"out.dialog.labelWidth\">\r\n      <el-form-item label=\"操作类型\" prop=\"storeOperateTypeId\">\r\n        <el-select v-model=\"out.models.storeOperateTypeId\" clearable>\r\n          <el-option v-for=\"item in storeOperateTypes\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"货物条码\" prop=\"goodsCode\">\r\n        <el-input v-model=\"out.models.goodsCode\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"领料详单编号\" prop=\"requestDetailCode\">\r\n        <el-input v-model=\"out.models.requestDetailCode\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"提货人员信息\" prop=\"deliveryman\">\r\n        <el-input v-model=\"out.models.deliveryman\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"出库备注描述\" prop=\"description\">\r\n        <el-input v-model=\"out.models.description\" />\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"outData()\">出库</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport adaptive from '@/directive/el-table'\r\nimport setRule from '@/utils/form-validate'\r\nimport * as goods from '@/api/goods-manage/goods'\r\nimport * as storeOperateType from '@/api/log-manage/store-operate-type'\r\n\r\nexport default {\r\n  name: 'GoodsOutput',\r\n  // components: { Pagination },\r\n  directives: { adaptive },\r\n  data() {\r\n    return {\r\n      storeOperateTypes: null,\r\n      out: {\r\n        dialog: { title: '货物出库', visible: false, labelWidth: '150px' },\r\n        models: { storeOperateTypeId: null, requestDetailCode: null, deliveryman: null, description: null },\r\n        rules: {\r\n          storeOperateTypeId: setRule('操作类型', [{ selected: true }]),\r\n          goodsCode: setRule('货物条码', [{ required: true }, { length: [0, 255] }]),\r\n          requestDetailCode: setRule('领料详单编号', [{ required: true }, { length: [0, 32] }]),\r\n          deliveryman: setRule('提货人信息', [{ length: [0, 50] }]),\r\n          description: setRule('出库备注描述', [{ length: [0, 255] }])\r\n        }\r\n      },\r\n      loading: { list: true, export: false, detail: false, update: false }\r\n    }\r\n  },\r\n  created() {\r\n    this.getStoreOperateTypes()\r\n  },\r\n  methods: {\r\n    getStoreOperateTypes() {\r\n      const ioType = 1\r\n      storeOperateType.list(ioType).then(response => {\r\n        this.storeOperateTypes = response.data\r\n      }).catch(reject => {\r\n      })\r\n    },\r\n    outData() {\r\n      this.$refs['formOut'].validate((valid) => {\r\n        if (!valid) return false\r\n        goods.out(this.out.models).then(response => {\r\n          // 为方便连续添加，create对话框不关闭\r\n          // 需要清空的表单，手动清空，至少清空一个必填项，防止点击两遍\r\n          this.create.models.goodsCategoryId = ''\r\n          // 重新获取数据\r\n          this.getDatas()\r\n        }).catch(reject => {\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .app-container{\r\n    width: 40%;\r\n    margin: 150px auto;\r\n  }\r\n</style>\r\n"]}]}