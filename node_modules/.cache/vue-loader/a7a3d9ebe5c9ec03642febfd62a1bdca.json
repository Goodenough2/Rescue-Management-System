{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\system-manage\\password.vue?vue&type=style&index=0&id=53f35b81&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\system-manage\\password.vue","mtime":1593517269117},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hcHAtY29udGFpbmVyewogIHdpZHRoOiA0MCU7CiAgbWFyZ2luOiAxNTBweCBhdXRvOwp9Cg=="},{"version":3,"sources":["password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA","file":"password.vue","sourceRoot":"src/views/system-manage","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-form ref=\"ruleForm\" :model=\"ruleForm\" status-icon :rules=\"rules\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n      <el-form-item label=\"原始密码\" prop=\"rowPass\">\r\n        <el-input v-model.number=\"ruleForm.rowPass\" type=\"password\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"pass\">\r\n        <el-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n        <el-input v-model=\"ruleForm.checkPass\" type=\"password\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as user from '@/api/account'\r\n\r\nexport default {\r\n  name: 'Password',\r\n  data() {\r\n    var rowPass = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error('原始密码不能为空'))\r\n      }\r\n      // setTimeout(() => {\r\n      //   if (!Number.isInteger(value)) {\r\n      //     callback(new Error('请输入数字值'))\r\n      //   } else {\r\n      //     if (value < 18) {\r\n      //       callback(new Error('必须年满18岁'))\r\n      //     } else {\r\n      //       callback()\r\n      //     }\r\n      //   }\r\n      // }, 1000)\r\n    }\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      ruleForm: {\r\n        pass: '',\r\n        checkPass: '',\r\n        rowPass: ''\r\n      },\r\n      rules: {\r\n        rowPass: [\r\n          { validator: rowPass, trigger: 'blur' }\r\n        ],\r\n        pass: [\r\n          { validator: validatePass, trigger: 'blur' }\r\n        ],\r\n        checkPass: [\r\n          { validator: validatePass2, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          user.updatePwd(this.ruleForm).then(response => {\r\n            alert(response.message)\r\n          })\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .app-container{\r\n    width: 40%;\r\n    margin: 150px auto;\r\n  }\r\n</style>\r\n"]}]}