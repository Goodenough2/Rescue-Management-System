{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\login\\index.vue","mtime":1593517269064},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { title } from '@/settings'\r\nimport setRule from '@/utils/form-validate'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      title,\r\n      loginAccount: {\r\n        username: 'admin',\r\n        password: '111111'\r\n      },\r\n      rules: {\r\n        username: setRule('账号', [{ required: true, trigger: 'change' }]),\r\n        password: setRule('密码', [{ required: true, trigger: 'change' }])\r\n      },\r\n      passwordVisible: false,\r\n      capslockTooltip: false,\r\n      loading: false,\r\n      showDialog: false,\r\n      redirect: undefined,\r\n      otherQuery: {}\r\n    }\r\n  },\r\n  computed: {\r\n    passwordType() {\r\n      return this.passwordVisible ? '' : 'password'\r\n    },\r\n    eyeStyle() {\r\n      return this.passwordVisible ? 'vue-icon-eye-open' : 'vue-icon-eye-close'\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        const query = route.query\r\n        if (query) {\r\n          this.redirect = query.redirect\r\n          this.otherQuery = this.getOtherQuery(query)\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    // window.addEventListener('storage', this.afterQRScan)\r\n  },\r\n  mounted() {\r\n    if (this.loginAccount.username === '') {\r\n      this.$refs.username.focus()\r\n    } else if (this.loginAccount.password === '') {\r\n      this.$refs.password.focus()\r\n    }\r\n  },\r\n  destroyed() {\r\n    // window.removeEventListener('storage', this.afterQRScan)\r\n  },\r\n  methods: {\r\n    showPassword() {\r\n      this.passwordVisible = !this.passwordVisible\r\n    },\r\n    checkCapslock({ shiftKey, key } = {}) {\r\n      if (key && key.length === 1) {\r\n        if (shiftKey && (key >= 'a' && key <= 'z') || !shiftKey && (key >= 'A' && key <= 'Z')) {\r\n          this.capslockTooltip = true\r\n        } else {\r\n          this.capslockTooltip = false\r\n        }\r\n      }\r\n      if (key === 'CapsLock' && this.capslockTooltip === true) {\r\n        this.capslockTooltip = false\r\n      }\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          this.$store.dispatch('account/login', this.loginAccount)\r\n            .then(() => {\r\n              this.$router.push({ path: this.redirect || '/', query: this.otherQuery })\r\n              this.loading = false\r\n            })\r\n            .catch(() => {\r\n              this.loading = false\r\n            })\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    getOtherQuery(query) {\r\n      return Object.keys(query).reduce((acc, cur) => {\r\n        if (cur !== 'redirect') {\r\n          acc[cur] = query[cur]\r\n        }\r\n        return acc\r\n      }, {})\r\n    }\r\n  }\r\n}\r\n",null]}