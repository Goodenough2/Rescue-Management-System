{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\src\\views\\goods-manage\\goods-category-classification.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\src\\views\\goods-manage\\goods-category-classification.vue","mtime":1597567293217},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sZXZlbDEgewogIHRleHQtaW5kZW50OiAyOHB4Owp9CgoubGV2ZWwyIHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHRleHQtaW5kZW50OiA1NnB4Owp9Ci5sZXZlbDMgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgdGV4dC1pbmRlbnQ6IDg0cHg7Cn0KLmxldmVsNCB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICB0ZXh0LWluZGVudDogMTEycHg7Cn0K"},{"version":3,"sources":["goods-category-classification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"goods-category-classification.vue","sourceRoot":"src/views/goods-manage","sourcesContent":["<template>\n  <div class=\"app-container list\">\n    <div class=\"toolbar\">\n      <el-input v-model.trim=\"query.code\" class=\"query-item\" style=\"width: 160px\" placeholder=\"货物类别分类编号\" clearable @clear=\"handleQuery\" />\n      <el-input v-model.trim=\"query.name\" class=\"query-item\" style=\"width: 160px\" placeholder=\"货物类别分类名称\" clearable @clear=\"handleQuery\" />\n      <el-button class=\"tool tool-query\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleQuery\">查询</el-button>\n      <el-button class=\"tool tool-create\" type=\"primary\" icon=\"vue-icon-create\" @click=\"handleCreate\">添加</el-button>\n      <el-button class=\"tool tool-delete\" type=\"danger\" icon=\"vue-icon-delete\" @click=\"handleDeletes\">批量删除</el-button>\n      <el-button class=\"tool tool-export\" :loading=\"loading.export\" type=\"primary\" icon=\"vue-icon-excel\" @click=\"handleExport\">导出</el-button>\n    </div>\n\n    <el-table\n      ref=\"listTable\"\n      v-loading=\"loading.list\"\n      v-adaptive=\"{ bottomOffset: 55 }\"\n      height=\"200px\"\n      :data=\"datas\"\n      :cell-class-name=\"tableRowClassName\"\n      :default-sort=\"sort\"\n      border\n      fit\n      highlight-current-row\n      @sort-change=\"handleSort\"\n    >\n      <el-table-column type=\"selection\" align=\"center\" width=\"35\" />\n      <el-table-column label=\"货物类别分类编号\" prop=\"code\" :sort-orders=\"sortOrders\" align=\"center\" width=\"200\" show-overflow-tooltip />\n      <el-table-column label=\"货物类别分类名称\" prop=\"name\" :sort-orders=\"sortOrders\" align=\"left\" width=\"200\" show-overflow-tooltip />\n      <el-table-column label=\"类型描述\" prop=\"description\" :sort-orders=\"sortOrders\" align=\"left\" show-overflow-tooltip />\n      <el-table-column fixed=\"right\" label=\"操作\" align=\"center\" width=\"150\">\n        <template slot-scope=\"{row}\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"排序上移\" placement=\"top-end\">\n            <el-button type=\"primary\" plain class=\"button-operate button-rankup\" size=\"mini\" @click=\"handleRankup(row)\"><i class=\"vue-icon-rankup\" /></el-button>\n          </el-tooltip>\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"详情\" placement=\"top-end\">\n            <el-button type=\"primary\" plain class=\"button-operate button-detail\" size=\"mini\" @click=\"handleDetail(row)\"><i class=\"vue-icon-detail\" /></el-button>\n          </el-tooltip>\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"编辑\" placement=\"top-end\">\n            <el-button type=\"primary\" plain class=\"button-operate button-update\" size=\"mini\" @click=\"handleUpdate(row)\"><i class=\"vue-icon-update\" /></el-button>\n          </el-tooltip>\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"删除\" placement=\"top-end\">\n            <el-button type=\"danger\" plain class=\"button-operate button-delete\" size=\"mini\" @click=\"handleDelete(row)\"><i class=\"vue-icon-delete\" /></el-button>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog v-loading=\"loading.detail\" custom-class=\"dialog-fullscreen dialog-detail\" :title=\"detail.dialog.title\" :visible.sync=\"detail.dialog.visible\" :modal=\"false\" :modal-append-to-body=\"false\">\n      <el-form ref=\"formDetail\" label-position=\"right\" :label-width=\"detail.dialog.labelWidth\">\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"货物类别分类编号\">\n              {{ detail.models.code }}\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"货物类别分类名称\">\n              {{ detail.models.name }}\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item v-if=\"detail.models.parent != null\" label=\"父类别名称\">\n              {{ detail.models.parent.name }}\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"货物类别分类描述\">\n              {{ detail.models.description }}\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n    </el-dialog>\n\n    <el-dialog custom-class=\"dialog-fullscreen dialog-create\" :title=\"create.dialog.title\" :visible.sync=\"create.dialog.visible\" :modal=\"false\" :modal-append-to-body=\"false\" :close-on-click-modal=\"false\">\n      <el-form ref=\"formCreate\" :rules=\"create.rules\" :model=\"create.models\" label-position=\"right\" :label-width=\"create.dialog.labelWidth\">\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"编号\" prop=\"code\">\n              <el-input v-model=\"create.models.code\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"名称\" prop=\"name\">\n              <el-input v-model=\"create.models.name\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"分类\" prop=\"parentId\">\n              <el-cascader\n                v-model=\"create.models.parentId\"\n                :options=\"goodsCategoryClassifications\"\n                :props=\"{ expandTrigger: 'hover', checkStrictly: true }\"\n                @change=\"handleChange\"\n              />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :sl=\"24\">\n            <el-form-item label=\"描述\" prop=\"description\">\n              <el-input v-model=\"create.models.description\" type=\"textarea\"/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"create.dialog.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"createData()\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog v-loading=\"loading.update\" custom-class=\"dialog-fullscreen dialog-update\" :title=\"update.dialog.title\" :visible.sync=\"update.dialog.visible\" :modal=\"false\" :modal-append-to-body=\"false\" :close-on-click-modal=\"false\">\n      <el-form ref=\"formUpdate\" :rules=\"update.rules\" :model=\"update.models\" label-position=\"right\" :label-width=\"update.dialog.labelWidth\">\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"货物类别分类编号\" prop=\"code\">\n              <el-input v-model=\"update.models.code\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"货物类别分类名称\" prop=\"name\">\n              <el-input v-model=\"update.models.name\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"父级别\" prop=\"parentId\">\n              <el-cascader\n                v-model=\"update.models.parentId\"\n                :options=\"goodsCategoryClassifications\"\n                :props=\"{ expandTrigger: 'hover', checkStrictly: true }\"\n                @change=\"handleChange\"\n              />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :sl=\"24\">\n            <el-form-item label=\"货物类别分类描述\" prop=\"description\">\n              <el-input v-model=\"update.models.description\" type=\"textarea\"/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"update.dialog.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"updateData()\">提交</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport adaptive from '@/directive/el-table'\nimport setRule from '@/utils/form-validate'\nimport * as goodsCategoryClassification from '@/api/goods-manage/goods-category-classification'\n\nexport default {\n  name: 'GoodsType',\n  directives: { adaptive },\n  data() {\n    return {\n      access: this.$store.getters.access['GoodsManage']['GoodsCategoryClassification'],\n      datas: null,\n      query: { code: null, name: null },\n      page: { total: 0, current: 1, size: 20 },\n      sort: { prop: 'sort', order: 'ascending' },\n      goodsCategoryClassifications: [],\n      detail: {\n        dialog: { title: '货物类别分类信息', visible: false, labelWidth: '150px' },\n        models: { code: null, name: null, parent: { name: null }, description: null }\n      },\n      create: {\n        dialog: { title: '添加货物类别分类', visible: false, labelWidth: '150px' },\n        models: { code: null, name: null, parentId: null, description: null, level: null },\n        rules: {\n          code: setRule('货物类别分类编号', [{ required: true }, { length: [0, 32] }]),\n          name: setRule('货物类别分类名称', [{ required: true }, { length: [0, 20] }])\n        }\n      },\n      update: {\n        dialog: { title: '编辑类别信息', visible: false, labelWidth: '130px' },\n        models: { code: null, name: null, parentId: null, description: null, level: null },\n        rules: {\n          code: setRule('货物类别分类编号', [{ required: true }, { length: [0, 32] }]),\n          name: setRule('货物类别分类名称', [{ required: true }, { length: [0, 20] }])\n        }\n      },\n      loading: { list: true, export: false, detail: false, update: false },\n      sortOrders: ['ascending', 'descending']\n    }\n  },\n  created() {\n    this.getDatas()\n  },\n  mounted() {\n    this.getClassifications()\n  },\n  methods: {\n    getDatas() {\n      this.loading.list = true\n      goodsCategoryClassification.getList(this.query, this.page, this.sort).then(response => {\n        this.datas = response.data.items\n        this.page.total = response.data.total\n        this.loading.list = false\n      }).catch(reject => {\n        this.loading.list = false\n      })\n    },\n    getClassifications() {\n      goodsCategoryClassification.getlist(1).then(response => {\n        this.goodsCategoryClassifications = response.data\n      }).catch(reject => {\n      })\n    },\n    handleQuery() {\n      this.page.current = 1\n      this.getDatas()\n    },\n    handleSort(data) {\n      this.sort.prop = data.prop\n      this.sort.order = data.order\n      this.getDatas()\n    },\n    handleChange(value) {\n      const id = value[value.length - 1]\n      goodsCategoryClassification.get(id).then(response => {\n        this.update.models.parentId = id\n        this.create.models.parentId = id\n        this.create.models.level = response.data.level + 1\n        this.update.models.level = response.data.level + 1\n      }).catch(reject => {\n      })\n    },\n    handleDetail(row) {\n      // 若列表数据展示了全部属性，则可直接拷贝列表数据\n      this.detail.models = Object.assign({}, row)\n      this.detail.dialog.visible = true\n      this.loading.detail = true\n      // goodsCategoryClassification.get(row.id).then(response => {\n      //   this.detail.models = response.data\n      //   this.loading.detail = false\n      // }).catch(reject => {\n      //   this.loading.detail = false\n      // })\n      this.loading.detail = false\n    },\n    handleCreate() {\n      this.create.dialog.visible = true\n      this.getClassifications()\n    },\n    createData() {\n      this.$refs['formCreate'].validate((valid) => {\n        if (!valid) return false\n        goodsCategoryClassification.create(this.create.models).then(response => {\n          // 为方便连续添加，create对话框不关闭\n          // 需要清空的表单，手动清空，至少清空一个必填项，防止点击两遍\n          this.create.models.name = ''\n          this.create.models.code = ''\n          // 重新获取数据\n          this.getDatas()\n        }).catch(reject => {\n        })\n      })\n    },\n    handleRankup(row) {\n      this.loading.list = true\n      goodsCategoryClassification.rankup(row.id).then(response => {\n        this.getDatas()\n        this.loading.list = false\n      }).catch(reject => {\n        this.loading.list = false\n      })\n    },\n    handleUpdate(row) {\n      //  若列表数据展示了全部属性，则可直接拷贝列表数据用于编辑\n      this.update.models = Object.assign({}, row)\n      this.getClassifications()\n      this.update.dialog.visible = true\n      this.loading.update = true\n      // goodsType.get(row.id).then(response => {\n      //   this.update.models = response.data\n      //   this.loading.update = false\n      // }).catch(reject => {\n      //   this.loading.update = false\n      // })\n      this.$nextTick(() => {\n        this.$refs['formUpdate'].clearValidate()\n      })\n      this.loading.update = false\n    },\n    updateData() {\n      this.$refs['formUpdate'].validate((valid) => {\n        if (!valid) return false\n        const tempData = Object.assign({}, this.update.models)\n        goodsCategoryClassification.update(tempData).then(response => {\n          // 重新获取数据\n          this.getDatas()\n          this.update.dialog.visible = false\n        }).catch(reject => {\n        })\n      })\n    },\n    handleDelete(row) {\n      this.deleteData([row.id])\n    },\n    handleDeletes(row) {\n      if (this.$refs.listTable.selection.length === 0) {\n        this.$message({ type: 'warning', message: '请在下面表格的左侧勾选需要删除的数据', duration: 4000 })\n        return false\n      }\n      const ids = []\n      for (const item of this.$refs.listTable.selection) {\n        ids.push(item.id)\n      }\n      this.deleteData(ids)\n    },\n    deleteData(ids) {\n      this.$confirm('数据删除后，不可恢复, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        goodsCategoryClassification.del(ids).then(response => {\n          // 重新获取数据\n          this.getDatas()\n        }).catch(reject => {\n          this.getDatas()\n        })\n      })\n    },\n    handleExport() {\n      this.loading.export = true\n      goodsCategoryClassification.exportExcel(this.query, this.page, this.sort).then(response => {\n        const blob = new Blob([response])\n        const fileName = '货物类别分类.xls'\n        const elink = document.createElement('a')\n        elink.onload = () => { URL.revokeObjectURL(elink.href) }\n        elink.download = fileName\n        elink.style.display = 'none'\n        elink.href = URL.createObjectURL(blob)\n        document.body.appendChild(elink)\n        elink.click()\n        document.body.removeChild(elink)\n        this.loading.export = false\n      }).catch(reject => {\n        this.loading.export = false\n      })\n    },\n    tableRowClassName({ row, column, rowIndex, columnIndex }) {\n      console.log(column.property === 'name')\n      if (column.property === 'name') {\n        if (row.level === 1) {\n          return 'level1'\n        } else if (row.level === 2) {\n          return 'level2'\n        } else if (row.level === 3) {\n          return 'level3'\n        } else if (row.level === 4) {\n          return 'level4'\n        }\n      }\n      return ''\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n<style>\n   .level1 {\n     text-indent: 28px;\n   }\n\n   .level2 {\n     text-align: left;\n     text-indent: 56px;\n   }\n   .level3 {\n     text-align: left;\n     text-indent: 84px;\n   }\n   .level4 {\n     text-align: left;\n     text-indent: 112px;\n   }\n</style>\n"]}]}