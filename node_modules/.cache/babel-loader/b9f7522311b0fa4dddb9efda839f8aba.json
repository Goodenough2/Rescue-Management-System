{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\database.js","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\database.js","mtime":1593517267172},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Neal Wang/IdeaProjects/mingxin_web/mock/database.js"],"names":["storeTypes","i","push","Mock","mock","id","Random","guid","replace","name","sort","stores","data","code","toString","padStart","storeType","Math","random","length","address","enable","storeTypeId","areaTypes","description","areas","areaType","store","areaTypeId","storeId","containers","area","areaId","containerTypes","cellTypes","goodsStorageModes","cellCapacitys","cellType","goodsStorageMode","maxCapacity","cellTypeId","goodsStorageModeId","cells","type","container","usingMode","fullFlag","parseInt","typeId","containerId","devices","Status","statusId","status","goodsTypes","level","parentId","goodsStorageModels","goodsUnits","isBasic","storageModel","convertDesc","storageModeld","goodsColors","goods","batch","specification","fabrics","washWeight","washWidth","unitConsumption","wastage","customers","contactMan","contactPhone","contactDuty","goodsLockeds","customerOrder","color","unit","quality","customer","lockedTime","customerOrderId","goodsId","colorId","unitId","suppliers","orderTypes","parent","groups","approval","storesId","users","sex","groupId","group","created","email","orderCustomers","amount","qualityForReal","amountForReal","deliveryTime","operator","customerId","operatorId","orderRequists","contractCode","requistTime","goodsRequists","requistOrder","weight","orderRequistId","consolidations","consolidationCertificateCode","consolidationDate","createUser","good","goodsColor","a","b","c","d","A","B","C","systemCode","createUserId","goodId","goodsColorId","userLogs","user","loginTime","loginOutTime","operatorAction","userId","alarmTypes","alarmByUser","alarmByGroup","alarmByUserId","alarmByGroupId","alarms","alarmType","alarmTitle","alarmContent","alarmTime","alarmToUser","alarmFromUser","readFlag","dealFlag","alarmTypeId","alarmToUserId","alarmFromUserId","rfids","rfid","barCode","goodsOperators","oriCell","curCell","operatorTime","rfidId","oriCellId","curCellId","goodsStocks","locationType","location","isStoreTime","isVessel","locationId","orderPurchases","supplier","purchaseTime","supplierId","goodsPurchases","purchaseOrder","storageMode","colour","unitPrice","unitPriceForReal","weightEdPrice","inStoreStatus","putInStoreStatus","purchaseOrderId","storageModeId","colourId","goodsChecks","purchase","returnNums","returnReason","checker","checkTime","checkerId"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\r\n\r\n// 仓库类型\r\nconst storeTypes = []\r\nfor (let i = 0; i < 100; i++) {\r\n  storeTypes.push(Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '仓库类型' + (i + 1),\r\n    sort: i + 1\r\n  }))\r\n}\r\nexport { storeTypes }\r\n\r\n// 仓库\r\nconst stores = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '仓库' + (i + 1),\r\n    storeType: storeTypes[(Math.random() * (storeTypes.length > 10 ? 10 : storeTypes.length) | 0)],\r\n    address: '@cword(4,8)',\r\n    enable: 1,\r\n    sort: i + 1\r\n  })\r\n  data.storeTypeId = data.storeType.id\r\n  stores.push(data)\r\n}\r\nexport { stores }\r\n\r\n// 区域类型\r\nconst areaTypes = []\r\nfor (let i = 0; i < 100; i++) {\r\n  areaTypes.push(Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '区域类型' + (i + 1),\r\n    description: '这是区域' + (i + 1),\r\n    sort: i + 1\r\n  }))\r\n}\r\nexport { areaTypes }\r\n\r\n// 区域\r\nconst areas = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '区域' + (i + 1),\r\n    areaType: areaTypes[(Math.random() * (areaTypes.length > 10 ? 10 : storeTypes.length) | 0)],\r\n    store: stores[(Math.random() * (stores.length > 10 ? 10 : stores.length) | 0)],\r\n    enable: 1,\r\n    sort: i + 1\r\n  })\r\n  data.areaTypeId = data.areaType.id\r\n  data.storeId = data.store.id\r\n  areas.push(data)\r\n}\r\nexport { areas }\r\n\r\n// 货柜\r\nconst containers = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '货柜' + (i + 1),\r\n    area: areas[(Math.random() * (areas.length > 10 ? 10 : areas.length) | 0)],\r\n    enable: 1,\r\n    sort: i + 1\r\n  })\r\n  data.areaId = data.area.id\r\n  data.storeId = data.area.storeId\r\n  containers.push(data)\r\n}\r\nexport { containers }\r\n\r\n// 货柜类型\r\nconst containerTypes = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '货柜类型' + (i + 1),\r\n    description: '这是货柜类型' + (i + 1),\r\n    sort: i + 1\r\n  })\r\n  containerTypes.push(data)\r\n}\r\nexport { containerTypes }\r\n\r\n// 单元格类型管理\r\nconst  cellTypes = []\r\nfor (let i = 0; i < 4; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: (i + 1) + '号单元格',\r\n    description: '长*宽*高=' + i + '*' + i + '*' + i,\r\n    sort: i + 1\r\n  })\r\n  cellTypes.push(data)\r\n}\r\nexport { cellTypes }\r\n\r\n// 单元格存储方式\r\nconst goodsStorageModes = []\r\nfor (let i = 0; i < 100; i++) {\r\n  goodsStorageModes.push(Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '单元格存储方式' + (i + 1),\r\n    description: '单元格存储方式描述' + (i + 1),\r\n    sort: i + 1\r\n  }))\r\n}\r\nexport { goodsStorageModes }\r\n\r\n// 单元格大小管理\r\nconst cellCapacitys = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    cellType: cellTypes[(Math.random() * (cellTypes.length > 10 ? 10 : cellTypes.length) | 0)],\r\n    goodsStorageMode: goodsStorageModes[(Math.random() * (goodsStorageModes.length > 10 ? 10 : goodsStorageModes.length) | 0)],\r\n    maxCapacity: i + 3,\r\n    sort: i + 1\r\n  })\r\n  data.cellTypeId = data.cellType.id\r\n  data.goodsStorageModeId = data.goodsStorageMode.id\r\n  cellCapacitys.push(data)\r\n}\r\nexport { cellCapacitys }\r\n\r\n// 货柜单元格\r\nconst cells = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '单元格名称' + (i + 1),\r\n    type: cellTypes[(Math.random() * (cellTypes.length > 10 ? 10 : cellTypes.length) | 0)],\r\n    container: containers[(Math.random() * (containers.length > 10 ? 10 : containers.length) | 0)],\r\n    enable: 1,\r\n    usingMode: 0,\r\n    goodsStorageMode: goodsStorageModes[(Math.random() * (goodsStorageModes.length > 10 ? 10 : goodsStorageModes.length) | 0)],\r\n    fullFlag: parseInt(Math.random() * 3),\r\n    sort: i + 1\r\n  })\r\n  data.typeId = data.type.id\r\n  data.containerId = data.container.id\r\n  data.goodsStorageModeId = data.goodsStorageMode.id\r\n  cells.push(data)\r\n}\r\nexport { cells }\r\n\r\n\r\n// 设备\r\nconst devices = []\r\nconst Status = [\r\n  { id: 0, name: '不可用'},\r\n  { id: 1, name: '可用'},\r\n  { id: 2, name: '空闲'},\r\n  { id: 3, name: '忙碌'},\r\n  { id: 4, name: '其他'}\r\n]\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '设备' + (i + 1),\r\n    description: '这是设备' + (i + 1),\r\n    statusId: parseInt(Math.random() * (4 - 0) + 0),\r\n    enable: 1,\r\n    sort: i + 1\r\n  })\r\n  switch (data.statusId) {\r\n    case 0:\r\n      data.status = Status[0]\r\n      break\r\n    case 1:\r\n      data.status = Status[1]\r\n      break\r\n    case 2:\r\n      data.status = Status[2]\r\n      break\r\n    case 3:\r\n      data.status = Status[3]\r\n      break\r\n    case 4:\r\n      data.status = Status[4]\r\n      break\r\n  }\r\n  devices.push(data)\r\n}\r\nexport { devices , Status }\r\n\r\n// 货物大类\r\nconst goodsTypes = []\r\nfor (let i = 0; i < 100; i++){\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    level: parseInt(Math.random() * 2),\r\n    parentId: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '货物类别' + (i + 1),\r\n    description: '这是货物类别'+ (i + 1),\r\n    sort: i + 1\r\n  })\r\n  goodsTypes.push(data)\r\n}\r\nexport { goodsTypes }\r\n\r\n// 货物存储方式\r\nconst goodsStorageModels = []\r\nfor (let i = 0; i < 100; i++) {\r\n  goodsStorageModels.push(Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '单元格存储方式' + (i + 1),\r\n    description: '这是存储方式' + (i + 1),\r\n    sort: i + 1\r\n  }))\r\n}\r\nexport { goodsStorageModels }\r\n\r\n// 货物单位\r\nconst goodsUnits = []\r\nfor (let i = 0; i < 100; i++){\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '货物单位' + (i + 1),\r\n    description: '这是货物单位'+ (i + 1),\r\n    isBasic: 0,\r\n    storageModel: goodsStorageModels[(Math.random() * (areaTypes.length > 10 ? 10 : storeTypes.length) | 0)],\r\n    convertDesc: i * 0.5,\r\n    sort: i + 1\r\n  })\r\n  data.storageModeld = data.storageModel.id\r\n  goodsUnits.push(data)\r\n}\r\nexport { goodsUnits }\r\n\r\n// 货物颜色\r\nconst goodsColors= []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '货物颜色' + (i + 1),\r\n    description: '这是货物颜色'+ (i + 1),\r\n    sort: i + 1\r\n  })\r\n  goodsColors.push(data)\r\n}\r\nexport { goodsColors }\r\n\r\n// 货物\r\nconst goods = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '货物' + (i + 1),\r\n    batch: '货物批次' + (i + 1),\r\n    type: goodsTypes[(Math.random() * (goodsTypes.length > 10 ? 10 : goodsTypes.length) | 0)],\r\n    specification: \"货物规格\" + (i + 1),\r\n    fabrics: \"货物面料\" + (i + 1),\r\n    washWeight: \"水洗后克重\" +(i + 1),\r\n    washWidth: \"水洗后有效门幅\" + (i + 1),\r\n    unitConsumption: parseInt(Math.random()),\r\n    wastage: parseInt(Math.random() * 100),\r\n    description: '这是货物颜色'+ (i + 1),\r\n    sort: i + 1\r\n  })\r\n  data.typeId = data.type.id\r\n  goods.push(data)\r\n}\r\nexport { goods }\r\n\r\n// 客户\r\nconst customers = []\r\nfor (let i = 0; i < 100; i++ )  {\r\n  customers.push({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '用户' + (i + 1),\r\n    address: \"地址\" + (i + 1),\r\n    contactMan: '联系人' + (i + 1),\r\n    contactPhone: parseInt(Math.random() * 100000000000),\r\n    contactDuty: \"职务\" + (i + 1),\r\n    sort: i + 1\r\n  })\r\n}\r\nexport { customers }\r\n\r\n// 货物锁定\r\nconst goodsLockeds = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    goods: goods[(Math.random() * (goods.length > 10 ? 10 : goods.length) | 0)],\r\n    customerOrder:{ id: (i + 1), name: \"用户订单\" + (i + 1), status: 0 ,code: 'C' + (i + 1).toString().padStart(6, '0') },\r\n    color: goodsColors[(Math.random() * (goodsColors.length > 10 ? 10 : goodsColors.length) | 0)],\r\n    unit: goodsUnits[(Math.random() * (goodsUnits.length > 10 ? 10 : goodsUnits.length) | 0)],\r\n    quality: i * 2,\r\n    customer: { name: '用户'+ (i + 1)},\r\n    lockedTime: '2019-08-23 12:00:01',\r\n    type: 0,\r\n    sort: i + 1\r\n  })\r\n  data.customerOrderId = data.customerOrder.id,\r\n    data.goodsId = data.goods.id,\r\n    data.colorId = data.color.id\r\n  data.unitId = data.unit.id\r\n  goodsLockeds.push(data)\r\n}\r\nexport { goodsLockeds }\r\n\r\n// 供应商\r\nconst suppliers = []\r\nfor (let i = 0; i < 100; i++ )  {\r\n  suppliers.push({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: \"供应商\" + (i + 1),\r\n    address: \"地址\" + (i + 1),\r\n    contactMan: '联系人' + (i + 1),\r\n    contactPhone: parseInt(Math.random() * 100000000000),\r\n    contactDuty: \"职务\" + (i + 1),\r\n    sort: i + 1\r\n  })\r\n}\r\nexport { suppliers }\r\n\r\n//订单类型管理\r\nconst orderTypes = []\r\nfor (let i = 0; i < 100; i++ )  {\r\n  const data = Mock.mock({\r\n    id:  Mock.Random.guid().replace(/-/g, ''),\r\n    level: parseInt(Math.random() * 2 ),\r\n    parentId:  Mock.Random.guid().replace(/-/g, ''),\r\n    code:'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: \"订单类型\" + (i + 1),\r\n    description: \"这是订单类型\" + (i + 1),\r\n    sort: i + 1,\r\n    parent: { name: '订单类型' + (i + 1) }\r\n  })\r\n  orderTypes.push(data)\r\n}\r\nexport { orderTypes }\r\n\r\n// 用户组\r\nconst groups = []\r\nfor (let i = 0; i < 3; i++ )  {\r\n  const data = Mock.mock({\r\n    id: i,\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '组别' + (i + 1),\r\n    description: '这是组别' + (i + 1),\r\n    approval: parseInt(Math.random() * 2),\r\n    storesId: '1,2,3,4',\r\n    sort: i + 1\r\n  })\r\n  groups.push(data)\r\n}\r\nexport { groups }\r\n\r\n// sys_user\r\nconst users = []\r\nfor (let i = 0; i < 100; i++ )  {\r\n  const data = Mock.mock({\r\n    id:  Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    sex: '男',\r\n    name: 'user' + (i + 1),\r\n    groupId: 1,\r\n    group: {  name: \"组别1\" },\r\n    created: \"2019-10-05 12:23:05\",\r\n    contactPhone:  parseInt(Math.random() * 100000000000),\r\n    email: parseInt(Math.random() * 100000000000) + \"@qq.com\",\r\n    enable: 1,\r\n    sort: i + 1\r\n  })\r\n  users.push(data)\r\n}\r\nexport { users }\r\n\r\n// 客户订单信息\r\nconst orderCustomers = []\r\nconst status = [\r\n  { id: 0, name: '未完全出库'},\r\n  { id: 1, name: '部分出库'},\r\n  { id: 2, name: '完全出库'},\r\n]\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    type: orderTypes[(Math.random() * (orderTypes.length > 10 ? 10 : orderTypes.length) | 0)],\r\n    quality: 2*i,\r\n    amount: 2000*i,\r\n    qualityForReal: 2*i-1,\r\n    amountForReal: 2000*i-1,\r\n    statusId: parseInt(Math.random() * (3 - 0) + 0),\r\n    customer: customers[(Math.random() * (customers.length > 10 ? 10 : customers.length) | 0)],\r\n    deliveryTime: '当前时间是：'+i,\r\n    operator: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    sort: i + 1\r\n  })\r\n  switch (data.statusId) {\r\n    case 0:\r\n      data.status = status[0]\r\n      break\r\n    case 1:\r\n      data.status = status[1]\r\n      break\r\n    case 2:\r\n      data.status = status[2]\r\n      break\r\n  }\r\n  data.typeId =data.type.id,\r\n    data.customerId =data.customer.id,\r\n    data.operatorId =data.operator.id,\r\n    orderCustomers.push(data)\r\n}\r\nexport { orderCustomers, status }\r\n\r\n// 领料单\r\nconst orderRequists = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    contractCode: 'D' + (i + 1).toString().padStart(6, '0'),\r\n    quality: i * 2,\r\n    qualityForReal: i * 2 - 1,\r\n    amount: parseInt(Math.random() * 100),\r\n    amountForReal: parseInt(Math.random() * 100),\r\n    customerOrder: orderCustomers[(Math.random() * (orderCustomers.length > 10 ? 10 : orderCustomers.length) | 0)],\r\n    status: parseInt(Math.random() * 2),\r\n    requistTime: '2019-08-23 12:00:01',\r\n    operator: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0) ]\r\n  })\r\n  data.customerOrderId = data.customerOrder.id,\r\n    data.operatorId = data.operator.id\r\n  orderRequists.push(data)\r\n}\r\nexport{ orderRequists }\r\n\r\n// goods_requist\r\nconst goodsRequists = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    requistOrder: orderRequists[(Math.random() * (orderRequists.length > 10 ? 10 : orderRequists.length) | 0)],\r\n    goods: goods[(Math.random() * (goods.length > 10 ? 10 : goods.length) | 0)],\r\n    unit: goodsUnits[(Math.random() * (goodsUnits.length > 10 ? 10 : goodsUnits.length) | 0)],\r\n    color: goodsColors[(Math.random() * (goodsColors.length > 10 ? 10 : goodsColors.length) | 0)],\r\n    quality: i * 2,\r\n    qualityForReal: i * 2 - 1,\r\n    weight: Math.random() * 100\r\n  })\r\n  data.orderRequistId = data.requistOrder.id,\r\n    data.unitId = data.unit.id\r\n  data.colorId = data.color.id\r\n  data.goodsId = data.goods.id\r\n  goodsRequists.push(data)\r\n}\r\nexport{ goodsRequists }\r\n\r\n//货物盘整\r\nconst consolidations = []\r\nfor (let i = 0; i < 100; i++ )  {\r\n  const data = Mock.mock({\r\n    id:  Mock.Random.guid().replace(/-/g, ''),\r\n    consolidationCertificateCode: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    consolidationDate: \"2019-08-21 12:34:56\",\r\n    createUser: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    container: containers[(Math.random() * (containers.length > 10 ? 10 : containers.length) | 0)],\r\n    area: areas[(Math.random() * (areas.length > 10 ? 10 : areas.length) | 0)],\r\n    store: stores[(Math.random() * (stores.length > 10 ? 10 : stores.length) | 0)],\r\n    good: goods[(Math.random() * (goods.length > 10 ? 10 : goods.length) | 0)],\r\n    goodsColor: goodsColors[(Math.random() * (goodsColors.length > 10 ? 10 : goodsColors.length) | 0)],\r\n    cellType: cellTypes[(Math.random() * (cellTypes.length > 10 ? 10 : cellTypes.length) | 0)],\r\n    goodsStorageMode: goodsStorageModes[(Math.random() * (goodsStorageModes.length > 10 ? 10 : goodsStorageModes.length) | 0)],\r\n    a: i,\r\n    b: i-1,\r\n    c: \"差额\"+ i,\r\n    d: \"单位数量\"+ i,\r\n    A: \"货物加权平均价\"+i,\r\n    B: \"货物总价\"+i,\r\n    C: \"盈亏金额\"+i,\r\n    systemCode: '系统编号'+i,\r\n    enable: 1,\r\n    sort: i + 1\r\n  })\r\n  data.createUserId =data.createUser.id,\r\n    data.containerId =data.container.id,\r\n    data.areaId =data.area.id,\r\n    data.storeId =data.store.id,\r\n    data.goodId =data.good.id,\r\n    data.goodsColorId =data.goodsColor.id,\r\n    data.cellTypeId =data.cellType.id,\r\n    data.goodsStorageModeId =data.goodsStorageMode.id,\r\n    consolidations.push(data)\r\n}\r\nexport { consolidations }\r\n\r\n// 用户登录登录\r\nconst userLogs =[]\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    user: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    loginTime: '2019-12-02 12:25:14',\r\n    loginOutTime: '2019-12-02 12:30:14',\r\n    operatorAction: parseInt(Math.random() * 2)\r\n  })\r\n  data.userId = data.user.id,\r\n    userLogs.push(data)\r\n}\r\nexport { userLogs }\r\n\r\n// 预警类型\r\nconst alarmTypes = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '预警类型' + (i + 1),\r\n    description: '预警类型描述' + (i + 1),\r\n    alarmByUser: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    alarmByGroup: groups[(Math.random() * (groups.length > 10 ? 10 : groups.length) | 0)]\r\n  })\r\n  data.alarmByUserId = data.alarmByUser.id,\r\n    data.alarmByGroupId = data.alarmByGroup.id,\r\n    alarmTypes.push(data)\r\n}\r\nexport { alarmTypes }\r\n\r\n// 预警信息\r\nconst alarms = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    alarmType: alarmTypes[(Math.random() * (groups.length > 10 ? 10 : groups.length) | 0)],\r\n    alarmTitle: \"预警标题\" + (i + 1),\r\n    alarmContent: \"预警内容\"+ (i + 1),\r\n    alarmTime: \"2019-12-05 12:00:15\",\r\n    alarmToUser: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    alarmFromUser: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    readFlag: parseInt(Math.random() * 2),\r\n    dealFlag: parseInt(Math.random() * 2),\r\n  })\r\n  data.alarmTypeId = data.alarmType.id,\r\n    data.alarmToUserId = data.alarmToUser.id\r\n  data.alarmFromUserId = data.alarmFromUser.id\r\n  alarms.push(data)\r\n}\r\nexport { alarms }\r\n\r\n// rfids\r\nconst rfids = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    rfid: parseInt(Math.random() * 10000000000),\r\n    barCode: parseInt(Math.random() * 10000000000),\r\n    status: parseInt(Math.random() * 3),\r\n    sort: i + 1,\r\n  })\r\n  rfids.push(data)\r\n}\r\nexport { rfids }\r\n\r\n// 货物操作查询\r\nconst goodsOperators = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    goods: goods[(Math.random() * (goods.length > 10 ? 10 : goods.length) | 0)],\r\n    type: parseInt(Math.random() * 3) + 1,\r\n    rfid: rfids[(Math.random() * (rfids.length > 10 ? 10 : rfids.length) | 0)],\r\n    oriCell: cells[(Math.random() * (cells.length > 10 ? 10 : cells.length) | 0)],\r\n    curCell: cells[(Math.random() * (cells.length > 10 ? 10 : cells.length) | 0)],\r\n    quality: parseInt(Math.random() * 100),\r\n    weight: parseInt(Math.random() * 100),\r\n    unit: goodsUnits[(Math.random() * (cells.length > 10 ? 10 : cells.length) | 0)],\r\n    operatorTime: '2019-12-05 12:20:15',\r\n    operator: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    description: '这是货物操作' + (i + 1),\r\n  })\r\n  data.goodsId = data.goods.id,\r\n    data.rfidId = data.rfid.id,\r\n    data.oriCellId = data.oriCell.id,\r\n    data.curCellId = data.curCell.id\r\n  data.unitId = data.unit.id,\r\n    data.operatorId = data.operator.id\r\n  goodsOperators.push(data)\r\n}\r\nexport { goodsOperators }\r\n\r\n// goods_stock\r\nconst goodsStocks = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    goods: goods[(Math.random() * (goods.length > 10 ? 10 : goods.length) | 0)],\r\n    rfid: rfids[(Math.random() * (rfids.length > 10 ? 10 : rfids.length) | 0) ],\r\n    locationType: 4,\r\n    location: cells[(Math.random() * (cells.length > 10 ? 10 : cells.length) | 0) ],\r\n    unit: goodsUnits[(Math.random() * (goodsUnits.length > 10 ? 10 : goodsUnits.length) | 0)],\r\n    quality: parseInt(Math.random() * 100),\r\n    weight: parseInt(Math.random() * 100),\r\n    isStoreTime: '2019-12-02 12:20:24',\r\n    isVessel: parseInt(Math.random() * 2),\r\n  })\r\n  data.goodsId = data.goods.id,\r\n    data.locationId = data.location.id,\r\n    data.unitId = data.unit.id\r\n  data.rfidId = data.rfid.id\r\n  goodsStocks.push(data)\r\n}\r\nexport { goodsStocks }\r\n\r\n// 货物采购\r\nconst orderPurchases = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    type: orderTypes[(Math.random() * (orderTypes.length > 10 ? 10 : orderTypes.length) | 0)],\r\n    contractCode: parseInt(Math.random() * 10000),\r\n    quality: parseInt(Math.random() * 100),\r\n    amount:  parseInt(Math.random() * 100),\r\n    qualityForReal: parseInt(Math.random() * 100),\r\n    amountForReal: parseInt(Math.random() * 100),\r\n    status: parseInt(Math.random() * 3),\r\n    supplier: suppliers[(Math.random() * (suppliers.length > 10 ? 10 : suppliers.length) | 0)],\r\n    customerOrder: orderCustomers[(Math.random() * (orderCustomers.length > 10 ? 10 : orderCustomers.length) | 0)],\r\n    purchaseTime: '2019-05-24 15:24:25',\r\n    operator: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n  })\r\n  data.typeId = data.type.id,\r\n    data.supplierId = data.supplier.id\r\n  data.operatorId = data.operator.id\r\n  orderPurchases.push(data)\r\n}\r\nexport { orderPurchases }\r\n\r\n// 货物采购\r\nconst goodsPurchases = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    purchaseOrder: orderPurchases[(Math.random() * (orderPurchases.length > 10 ? 10 : orderPurchases.length) | 0)],\r\n    goods: goods[(Math.random() * (goods.length > 10 ? 10 : goods.length) | 0)],\r\n    storageMode: goodsStorageModes[(Math.random() * (goodsStorageModes.length > 10 ? 10 : goodsStorageModes.length) | 0)],\r\n    unit: goodsUnits[(Math.random() * (goodsUnits.length > 10 ? 10 : goodsUnits.length) | 0)],\r\n    colour: goodsColors[(Math.random() * (goodsColors.length > 10 ? 10 : goodsColors.length) | 0)],\r\n    quality: parseInt(Math.random() * 100),\r\n    unitPrice: parseInt(Math.random() * 100),\r\n    qualityForReal: parseInt(Math.random() * 100),\r\n    unitPriceForReal: parseInt(Math.random() * 100),\r\n    weightEdPrice: parseInt(Math.random() * 100),\r\n    inStoreStatus: parseInt(Math.random() * 3),\r\n    putInStoreStatus: parseInt(Math.random() * 3),\r\n    sort: i + 1,\r\n  })\r\n  data.purchaseOrderId = data.purchaseOrder.id,\r\n    data.goodsId = data.goods.id\r\n  data.storageModeId = data.storageMode.id,\r\n    data.unitId = data.unit.id,\r\n    data.colourId = data.colour.id,\r\n    goodsPurchases.push(data)\r\n}\r\nexport { goodsPurchases }\r\n\r\n// 质检\r\nconst goodsChecks = []\r\nfor (let i = 0; i < 100; i++ ) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    purchase: goodsPurchases[(Math.random() * (goodsPurchases.length > 10 ? 10 : goodsPurchases.length) | 0)],\r\n    returnNums: parseInt(Math.random() * 100),\r\n    returnReason: '退货理由' + (i + 1),\r\n    checker: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    checkTime: '2019-12-05 12:20:25',\r\n    operator: users[(Math.random() * (users.length > 10 ? 10 : users.length) | 0)],\r\n    operatorTime: '2019-05-24 15:24:25',\r\n    status: parseInt(Math.random() * 2)\r\n  })\r\n  data.checkerId = data.checker.id,\r\n    data.operatorId = data.operator.id\r\n  goodsChecks.push(data)\r\n}\r\nexport { goodsChecks }\r\n\r\n"]}]}