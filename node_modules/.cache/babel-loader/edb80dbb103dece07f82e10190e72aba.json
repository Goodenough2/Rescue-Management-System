{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\store\\modules\\account.js","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\store\\modules\\account.js","mtime":1593517268972},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Neal Wang/IdeaProjects/mingxin_web/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"C:/Users/Neal Wang/IdeaProjects/mingxin_web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"C:/Users/Neal Wang/IdeaProjects/mingxin_web/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _account = require(\"@/api/account\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireWildcard(require(\"@/router\"));\n\nvar state = {\n  token: (0, _auth.getToken)(),\n  user: {},\n  access: null\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER: function SET_USER(state, user) {\n    state.user = user;\n  },\n  SET_ACCESS: function SET_ACCESS(state, access) {\n    state.access = access;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, loginModel) {\n    var commit = _ref.commit;\n    var username = loginModel.username,\n        password = loginModel.password;\n    return new Promise(function (resolve, reject) {\n      (0, _account.login)({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        // 存放token放入localStorage\n        commit('SET_TOKEN', response.data.token);\n        commit('SET_USER', response.data.user);\n        (0, _auth.setToken)(response.data.token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user access\n  getAccess: function getAccess(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _account.getAccess)().then(function (response) {\n        var access = response.data.access;\n\n        if (!access) {\n          reject('请重新登录！');\n        } // 将access本地存储\n\n\n        commit('SET_ACCESS', access);\n        resolve({\n          access: access\n        });\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      (0, _account.logout)(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_ACCESS', null);\n        (0, _auth.removeToken)();\n        (0, _router.resetRouter)();\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ACCESS', null);\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  },\n  // dynamically modify permissions\n  changeRoles: function changeRoles(_ref5, role) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {\n        var token, _yield$dispatch, access, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                (0, _auth.setToken)(token);\n                _context.next = 5;\n                return dispatch('getAccess');\n\n              case 5:\n                _yield$dispatch = _context.sent;\n                access = _yield$dispatch.access;\n                (0, _router.resetRouter)(); // generate accessible routes map based on access\n\n                _context.next = 10;\n                return dispatch('permission/generateRoutes', access, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context.sent;\n\n                // dynamically add accessible routes\n                _router.default.addRoutes(accessRoutes); // reset visited views and cached views\n\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}