{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\src\\filters\\index.js","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\src\\filters\\index.js","mtime":1593516448642},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\rescue_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnRpbWVBZ28gPSB0aW1lQWdvOwpleHBvcnRzLm51bWJlckZvcm1hdHRlciA9IG51bWJlckZvcm1hdHRlcjsKZXhwb3J0cy50b1Rob3VzYW5kRmlsdGVyID0gdG9UaG91c2FuZEZpbHRlcjsKZXhwb3J0cy51cHBlcmNhc2VGaXJzdCA9IHVwcGVyY2FzZUZpcnN0OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgInBhcnNlVGltZSIsIHsKICBlbnVtZXJhYmxlOiB0cnVlLAogIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgcmV0dXJuIF91dGlscy5wYXJzZVRpbWU7CiAgfQp9KTsKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJmb3JtYXRUaW1lIiwgewogIGVudW1lcmFibGU6IHRydWUsCiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICByZXR1cm4gX3V0aWxzLmZvcm1hdFRpbWU7CiAgfQp9KTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZSIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuY29uc3RydWN0b3IiKTsKCnZhciBfdXRpbHMgPSByZXF1aXJlKCJAL3V0aWxzIik7CgovLyBpbXBvcnQgcGFyc2VUaW1lLCBmb3JtYXRUaW1lIGFuZCBzZXQgdG8gZmlsdGVyCgovKioNCiAqIFNob3cgcGx1cmFsIGxhYmVsIGlmIHRpbWUgaXMgcGx1cmFsIG51bWJlcg0KICogQHBhcmFtIHtudW1iZXJ9IHRpbWUNCiAqIEBwYXJhbSB7c3RyaW5nfSBsYWJlbA0KICogQHJldHVybiB7c3RyaW5nfQ0KICovCmZ1bmN0aW9uIHBsdXJhbGl6ZSh0aW1lLCBsYWJlbCkgewogIGlmICh0aW1lID09PSAxKSB7CiAgICByZXR1cm4gdGltZSArIGxhYmVsOwogIH0KCiAgcmV0dXJuIHRpbWUgKyBsYWJlbCArICdzJzsKfQovKioNCiAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lDQogKi8KCgpmdW5jdGlvbiB0aW1lQWdvKHRpbWUpIHsKICB2YXIgYmV0d2VlbiA9IERhdGUubm93KCkgLyAxMDAwIC0gTnVtYmVyKHRpbWUpOwoKICBpZiAoYmV0d2VlbiA8IDM2MDApIHsKICAgIHJldHVybiBwbHVyYWxpemUofn4oYmV0d2VlbiAvIDYwKSwgJyBtaW51dGUnKTsKICB9IGVsc2UgaWYgKGJldHdlZW4gPCA4NjQwMCkgewogICAgcmV0dXJuIHBsdXJhbGl6ZSh+fihiZXR3ZWVuIC8gMzYwMCksICcgaG91cicpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gcGx1cmFsaXplKH5+KGJldHdlZW4gLyA4NjQwMCksICcgZGF5Jyk7CiAgfQp9Ci8qKg0KICogTnVtYmVyIGZvcm1hdHRpbmcNCiAqIGxpa2UgMTAwMDAgPT4gMTBrDQogKiBAcGFyYW0ge251bWJlcn0gbnVtDQogKiBAcGFyYW0ge251bWJlcn0gZGlnaXRzDQogKi8KCgpmdW5jdGlvbiBudW1iZXJGb3JtYXR0ZXIobnVtLCBkaWdpdHMpIHsKICB2YXIgc2kgPSBbewogICAgdmFsdWU6IDFFMTgsCiAgICBzeW1ib2w6ICdFJwogIH0sIHsKICAgIHZhbHVlOiAxRTE1LAogICAgc3ltYm9sOiAnUCcKICB9LCB7CiAgICB2YWx1ZTogMUUxMiwKICAgIHN5bWJvbDogJ1QnCiAgfSwgewogICAgdmFsdWU6IDFFOSwKICAgIHN5bWJvbDogJ0cnCiAgfSwgewogICAgdmFsdWU6IDFFNiwKICAgIHN5bWJvbDogJ00nCiAgfSwgewogICAgdmFsdWU6IDFFMywKICAgIHN5bWJvbDogJ2snCiAgfV07CgogIGZvciAodmFyIGkgPSAwOyBpIDwgc2kubGVuZ3RoOyBpKyspIHsKICAgIGlmIChudW0gPj0gc2lbaV0udmFsdWUpIHsKICAgICAgcmV0dXJuIChudW0gLyBzaVtpXS52YWx1ZSArIDAuMSkudG9GaXhlZChkaWdpdHMpLnJlcGxhY2UoL1wuMCskfChcLlswLTldKlsxLTldKTArJC8sICckMScpICsgc2lbaV0uc3ltYm9sOwogICAgfQogIH0KCiAgcmV0dXJuIG51bS50b1N0cmluZygpOwp9Ci8qKg0KICogMTAwMDAgPT4gIjEwLDAwMCINCiAqIEBwYXJhbSB7bnVtYmVyfSBudW0NCiAqLwoKCmZ1bmN0aW9uIHRvVGhvdXNhbmRGaWx0ZXIobnVtKSB7CiAgcmV0dXJuICgrbnVtIHx8IDApLnRvU3RyaW5nKCkucmVwbGFjZSgvXi0/XGQrL2csIGZ1bmN0aW9uIChtKSB7CiAgICByZXR1cm4gbS5yZXBsYWNlKC8oPz0oPyFcYikoXGR7M30pKyQpL2csICcsJyk7CiAgfSk7Cn0KLyoqDQogKiBVcHBlciBjYXNlIGZpcnN0IGNoYXINCiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJpbmcNCiAqLwoKCmZ1bmN0aW9uIHVwcGVyY2FzZUZpcnN0KHN0cmluZykgewogIHJldHVybiBzdHJpbmcuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHJpbmcuc2xpY2UoMSk7Cn0="},{"version":3,"sources":["C:/Users/Neal Wang/IdeaProjects/rescue_web/src/filters/index.js"],"names":["pluralize","time","label","timeAgo","between","Date","now","Number","numberFormatter","num","digits","si","value","symbol","i","length","toFixed","replace","toString","toThousandFilter","m","uppercaseFirst","string","charAt","toUpperCase","slice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA;;AAGA;;;;;;AAMA,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9B,MAAID,IAAI,KAAK,CAAb,EAAgB;AACd,WAAOA,IAAI,GAAGC,KAAd;AACD;;AACD,SAAOD,IAAI,GAAGC,KAAP,GAAe,GAAtB;AACD;AAED;;;;;AAGO,SAASC,OAAT,CAAiBF,IAAjB,EAAuB;AAC5B,MAAMG,OAAO,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoBC,MAAM,CAACN,IAAD,CAA1C;;AACA,MAAIG,OAAO,GAAG,IAAd,EAAoB;AAClB,WAAOJ,SAAS,CAAC,CAAC,EAAEI,OAAO,GAAG,EAAZ,CAAF,EAAmB,SAAnB,CAAhB;AACD,GAFD,MAEO,IAAIA,OAAO,GAAG,KAAd,EAAqB;AAC1B,WAAOJ,SAAS,CAAC,CAAC,EAAEI,OAAO,GAAG,IAAZ,CAAF,EAAqB,OAArB,CAAhB;AACD,GAFM,MAEA;AACL,WAAOJ,SAAS,CAAC,CAAC,EAAEI,OAAO,GAAG,KAAZ,CAAF,EAAsB,MAAtB,CAAhB;AACD;AACF;AAED;;;;;;;;AAMO,SAASI,eAAT,CAAyBC,GAAzB,EAA8BC,MAA9B,EAAsC;AAC3C,MAAMC,EAAE,GAAG,CACT;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GADS,EAET;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAFS,EAGT;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAHS,EAIT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAJS,EAKT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GALS,EAMT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GANS,CAAX;;AAQA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAACI,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,QAAIL,GAAG,IAAIE,EAAE,CAACG,CAAD,CAAF,CAAMF,KAAjB,EAAwB;AACtB,aAAO,CAACH,GAAG,GAAGE,EAAE,CAACG,CAAD,CAAF,CAAMF,KAAZ,GAAoB,GAArB,EAA0BI,OAA1B,CAAkCN,MAAlC,EAA0CO,OAA1C,CAAkD,0BAAlD,EAA8E,IAA9E,IAAsFN,EAAE,CAACG,CAAD,CAAF,CAAMD,MAAnG;AACD;AACF;;AACD,SAAOJ,GAAG,CAACS,QAAJ,EAAP;AACD;AAED;;;;;;AAIO,SAASC,gBAAT,CAA0BV,GAA1B,EAA+B;AACpC,SAAO,CAAC,CAACA,GAAD,IAAQ,CAAT,EAAYS,QAAZ,GAAuBD,OAAvB,CAA+B,SAA/B,EAA0C,UAAAG,CAAC;AAAA,WAAIA,CAAC,CAACH,OAAF,CAAU,sBAAV,EAAkC,GAAlC,CAAJ;AAAA,GAA3C,CAAP;AACD;AAED;;;;;;AAIO,SAASI,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD","sourcesContent":["// import parseTime, formatTime and set to filter\r\nexport { parseTime, formatTime } from '@/utils'\r\n\r\n/**\r\n * Show plural label if time is plural number\r\n * @param {number} time\r\n * @param {string} label\r\n * @return {string}\r\n */\r\nfunction pluralize(time, label) {\r\n  if (time === 1) {\r\n    return time + label\r\n  }\r\n  return time + label + 's'\r\n}\r\n\r\n/**\r\n * @param {number} time\r\n */\r\nexport function timeAgo(time) {\r\n  const between = Date.now() / 1000 - Number(time)\r\n  if (between < 3600) {\r\n    return pluralize(~~(between / 60), ' minute')\r\n  } else if (between < 86400) {\r\n    return pluralize(~~(between / 3600), ' hour')\r\n  } else {\r\n    return pluralize(~~(between / 86400), ' day')\r\n  }\r\n}\r\n\r\n/**\r\n * Number formatting\r\n * like 10000 => 10k\r\n * @param {number} num\r\n * @param {number} digits\r\n */\r\nexport function numberFormatter(num, digits) {\r\n  const si = [\r\n    { value: 1E18, symbol: 'E' },\r\n    { value: 1E15, symbol: 'P' },\r\n    { value: 1E12, symbol: 'T' },\r\n    { value: 1E9, symbol: 'G' },\r\n    { value: 1E6, symbol: 'M' },\r\n    { value: 1E3, symbol: 'k' }\r\n  ]\r\n  for (let i = 0; i < si.length; i++) {\r\n    if (num >= si[i].value) {\r\n      return (num / si[i].value + 0.1).toFixed(digits).replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, '$1') + si[i].symbol\r\n    }\r\n  }\r\n  return num.toString()\r\n}\r\n\r\n/**\r\n * 10000 => \"10,000\"\r\n * @param {number} num\r\n */\r\nexport function toThousandFilter(num) {\r\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\r\n}\r\n\r\n/**\r\n * Upper case first char\r\n * @param {String} string\r\n */\r\nexport function uppercaseFirst(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n"]}]}