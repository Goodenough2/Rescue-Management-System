{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\databases\\both.js","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\databases\\both.js","mtime":1593517267176},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJDOi9Vc2Vycy9OZWFsIFdhbmcvSWRlYVByb2plY3RzL21pbmd4aW5fd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnN1cHBsaWVycyA9IGV4cG9ydHMuY3VzdG9tZXJzID0gdm9pZCAwOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZSIpOwoKdmFyIF9tb2NranMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIm1vY2tqcyIpKTsKCnZhciBjdXN0b21lcnMgPSBbXTsKZXhwb3J0cy5jdXN0b21lcnMgPSBjdXN0b21lcnM7Cgpmb3IgKHZhciBpID0gMDsgaSA8IDEwMDsgaSsrKSB7CiAgdmFyIGRhdGEgPSBfbW9ja2pzLmRlZmF1bHQubW9jayh7CiAgICBpZDogX21vY2tqcy5kZWZhdWx0LlJhbmRvbS5ndWlkKCkucmVwbGFjZSgvLS9nLCAnJyksCiAgICBuYW1lOiAn5a6i5oi3JyArIChpICsgMSksCiAgICBhZGRyZXNzOiAn5a6i5oi35Zyw5Z2AJyArIChpICsgMSksCiAgICBjb250YWN0TWFuOiAn5byg5LiJ77yM546L5LqUJywKICAgIGNvbnRhY3RQaG9uZTogJzE3ODI2MTU2NzIxMicsCiAgICBjb250YWN0RHV0eTogJ+WuouaIt+e7j+eQhizlrqLmiLfmgLvnm5EnLAogICAgc29ydDogaSArIDEKICB9KTsKCiAgY3VzdG9tZXJzLnB1c2goZGF0YSk7Cn0KCnZhciBzdXBwbGllcnMgPSBbXTsKZXhwb3J0cy5zdXBwbGllcnMgPSBzdXBwbGllcnM7Cgpmb3IgKHZhciBfaSA9IDA7IF9pIDwgMTAwOyBfaSsrKSB7CiAgdmFyIF9kYXRhID0gX21vY2tqcy5kZWZhdWx0Lm1vY2soewogICAgaWQ6IF9tb2NranMuZGVmYXVsdC5SYW5kb20uZ3VpZCgpLnJlcGxhY2UoLy0vZywgJycpLAogICAgbmFtZTogJ+S+m+W6lOWVhicgKyAoX2kgKyAxKSwKICAgIGFkZHJlc3M6ICfkvpvlupTllYblnLDlnYAnICsgKF9pICsgMSksCiAgICBjb250YWN0TWFuOiAn5byg5LiJ77yM546L5LqUJywKICAgIGNvbnRhY3RQaG9uZTogJzE3ODI2MTU2NzIxMicsCiAgICBjb250YWN0RHV0eTogJ+S+m+W6lOWVhue7j+eQhizkvpvlupTllYbmgLvnm5EnLAogICAgc29ydDogX2kgKyAxCiAgfSk7CgogIHN1cHBsaWVycy5wdXNoKF9kYXRhKTsKfQ=="},{"version":3,"sources":["C:/Users/Neal Wang/IdeaProjects/mingxin_web/mock/databases/both.js"],"names":["customers","i","data","Mock","mock","id","Random","guid","replace","name","address","contactMan","contactPhone","contactDuty","sort","push","suppliers"],"mappings":";;;;;;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAG,EAAlB;;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,MAAMC,IAAI,GAAGC,gBAAKC,IAAL,CAAU;AACrBC,IAAAA,EAAE,EAAEF,gBAAKG,MAAL,CAAYC,IAAZ,GAAmBC,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CADiB;AAErBC,IAAAA,IAAI,EAAE,QAAQR,CAAC,GAAG,CAAZ,CAFe;AAGrBS,IAAAA,OAAO,EAAE,UAAUT,CAAC,GAAG,CAAd,CAHY;AAIrBU,IAAAA,UAAU,EAAE,OAJS;AAKrBC,IAAAA,YAAY,EAAE,cALO;AAMrBC,IAAAA,WAAW,EAAE,WANQ;AAOrBC,IAAAA,IAAI,EAAEb,CAAC,GAAG;AAPW,GAAV,CAAb;;AASAD,EAAAA,SAAS,CAACe,IAAV,CAAeb,IAAf;AACD;;AAGD,IAAMc,SAAS,GAAG,EAAlB;;;AACA,KAAK,IAAIf,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,GAApB,EAAyBA,EAAC,EAA1B,EAA8B;AAC5B,MAAMC,KAAI,GAAGC,gBAAKC,IAAL,CAAU;AACrBC,IAAAA,EAAE,EAAEF,gBAAKG,MAAL,CAAYC,IAAZ,GAAmBC,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CADiB;AAErBC,IAAAA,IAAI,EAAE,SAASR,EAAC,GAAG,CAAb,CAFe;AAGrBS,IAAAA,OAAO,EAAE,WAAWT,EAAC,GAAG,CAAf,CAHY;AAIrBU,IAAAA,UAAU,EAAE,OAJS;AAKrBC,IAAAA,YAAY,EAAE,cALO;AAMrBC,IAAAA,WAAW,EAAE,aANQ;AAOrBC,IAAAA,IAAI,EAAEb,EAAC,GAAG;AAPW,GAAV,CAAb;;AASAe,EAAAA,SAAS,CAACD,IAAV,CAAeb,KAAf;AACD","sourcesContent":["import Mock from 'mockjs'\r\n\r\nconst customers = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '客户' + (i + 1),\r\n    address: '客户地址' + (i + 1),\r\n    contactMan: '张三，王五',\r\n    contactPhone: '178261567212',\r\n    contactDuty: '客户经理,客户总监',\r\n    sort: i + 1\r\n  })\r\n  customers.push(data)\r\n}\r\nexport { customers }\r\n\r\nconst suppliers = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '供应商' + (i + 1),\r\n    address: '供应商地址' + (i + 1),\r\n    contactMan: '张三，王五',\r\n    contactPhone: '178261567212',\r\n    contactDuty: '供应商经理,供应商总监',\r\n    sort: i + 1\r\n  })\r\n  suppliers.push(data)\r\n}\r\nexport { suppliers }\r\n"]}]}