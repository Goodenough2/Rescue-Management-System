{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\databases\\goods-type.js","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\databases\\goods-type.js","mtime":1593517267178},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJDOi9Vc2Vycy9OZWFsIFdhbmcvSWRlYVByb2plY3RzL21pbmd4aW5fd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdvb2RzUHJvcGVydHlWYWx1ZXMgPSBleHBvcnRzLmdvb2RzU3RvcmFnZU1vZGVzID0gZXhwb3J0cy5nb29kc0NhdGVnb3JpZXMgPSBleHBvcnRzLmdvb2RzQ2F0ZWdvcnlDbGFzc2lmaWNhdGlvbnMgPSBleHBvcnRzLmdvb2RzUHJvcGVydGllcyA9IGV4cG9ydHMuZ29vZHNDb2xvdXJzID0gZXhwb3J0cy5nb29kc1VuaXRzID0gdm9pZCAwOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnJlcGxhY2UiKTsKCnZhciBfbW9ja2pzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJtb2NranMiKSk7Cgp2YXIgX2JvdGggPSByZXF1aXJlKCIuL2JvdGgiKTsKCnZhciBnb29kc1VuaXRzID0gW107CmV4cG9ydHMuZ29vZHNVbml0cyA9IGdvb2RzVW5pdHM7Cgpmb3IgKHZhciBpID0gMDsgaSA8IDEwMDsgaSsrKSB7CiAgdmFyIGRhdGEgPSBfbW9ja2pzLmRlZmF1bHQubW9jayh7CiAgICBpZDogX21vY2tqcy5kZWZhdWx0LlJhbmRvbS5ndWlkKCkucmVwbGFjZSgvLS9nLCAnJyksCiAgICBuYW1lOiAn6LSn54mp5Y2V5L2NJyArIChpICsgMSksCiAgICBkZXNjcmlwdGlvbjogJ+i/meaYr+i0p+eJqeWNleS9jScgKyAoaSArIDEpLAogICAgc29ydDogaSArIDEKICB9KTsKCiAgZ29vZHNVbml0cy5wdXNoKGRhdGEpOwp9CgovLyDotKfnianpopzoibIKdmFyIGdvb2RzQ29sb3VycyA9IFtdOwpleHBvcnRzLmdvb2RzQ29sb3VycyA9IGdvb2RzQ29sb3VyczsKCmZvciAodmFyIF9pID0gMDsgX2kgPCAxMDA7IF9pKyspIHsKICB2YXIgX2RhdGEgPSBfbW9ja2pzLmRlZmF1bHQubW9jayh7CiAgICBpZDogX21vY2tqcy5kZWZhdWx0LlJhbmRvbS5ndWlkKCkucmVwbGFjZSgvLS9nLCAnJyksCiAgICBjb2RlOiAnQycgKyAoX2kgKyAxKS50b1N0cmluZygpLnBhZFN0YXJ0KDYsICcwJyksCiAgICBuYW1lOiAn6LSn54mp6aKc6ImyJyArIChfaSArIDEpLAogICAgZGVzY3JpcHRpb246ICfov5nmmK/otKfnianpopzoibInICsgKF9pICsgMSksCiAgICBzb3J0OiBfaSArIDEKICB9KTsKCiAgZ29vZHNDb2xvdXJzLnB1c2goX2RhdGEpOwp9CgovLyBnb29kc19wcm9wZXJ0eQp2YXIgZ29vZHNQcm9wZXJ0aWVzID0gW107CmV4cG9ydHMuZ29vZHNQcm9wZXJ0aWVzID0gZ29vZHNQcm9wZXJ0aWVzOwoKZm9yICh2YXIgX2kyID0gMDsgX2kyIDwgMTAwOyBfaTIrKykgewogIHZhciBfZGF0YTIgPSBfbW9ja2pzLmRlZmF1bHQubW9jayh7CiAgICBpZDogX21vY2tqcy5kZWZhdWx0LlJhbmRvbS5ndWlkKCkucmVwbGFjZSgvLS9nLCAnJyksCiAgICBuYW1lOiAn6LSn54mp57G75Yir5omp5bGV5bGe5oCnJyArIChfaTIgKyAxKSwKICAgIGRlc2NyaXB0aW9uOiAn5omp5bGV5bGe5oCn5o+P6L+wJyArIChfaTIgKyAxKSwKICAgIHZhbHVlVHlwZTogcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDMpCiAgfSk7CgogIF9kYXRhMi5wYXJlbnQgPSBudWxsOwogIGdvb2RzUHJvcGVydGllcy5wdXNoKF9kYXRhMik7Cn0KCnZhciBnb29kc0NhdGVnb3J5Q2xhc3NpZmljYXRpb25zID0gW107CmV4cG9ydHMuZ29vZHNDYXRlZ29yeUNsYXNzaWZpY2F0aW9ucyA9IGdvb2RzQ2F0ZWdvcnlDbGFzc2lmaWNhdGlvbnM7Cgpmb3IgKHZhciBfaTMgPSAwOyBfaTMgPCAyOyBfaTMrKykgewogIGlmIChfaTMgPT09IDApIHsKICAgIHZhciBfZGF0YTMgPSBfbW9ja2pzLmRlZmF1bHQubW9jayh7CiAgICAgIGlkOiBfbW9ja2pzLmRlZmF1bHQuUmFuZG9tLmd1aWQoKS5yZXBsYWNlKC8tL2csICcnKSwKICAgICAgY29kZTogJ0MnICsgKF9pMyArIDEpLnRvU3RyaW5nKCkucGFkU3RhcnQoNiwgJzAnKSwKICAgICAgbGV2ZWw6IDAsCiAgICAgIHBhcmVudElkOiBudWxsLAogICAgICBuYW1lOiAn6LSn54mp57G75Z6L5YiG57G75ZCN56ewJyArIChfaTMgKyAxKSwKICAgICAgZGVzY3JpcHRpb246ICfotKfniannsbvlnovliIbnsbvmj4/ov7AnICsgKF9pMyArIDEpLAogICAgICBzb3J0OiBfaTMgKyAxCiAgICB9KTsKCiAgICBnb29kc0NhdGVnb3J5Q2xhc3NpZmljYXRpb25zLnB1c2goX2RhdGEzKTsKICB9IGVsc2UgewogICAgdmFyIF9kYXRhNCA9IF9tb2NranMuZGVmYXVsdC5tb2NrKHsKICAgICAgaWQ6IF9tb2NranMuZGVmYXVsdC5SYW5kb20uZ3VpZCgpLnJlcGxhY2UoLy0vZywgJycpLAogICAgICBjb2RlOiAnQycgKyAoX2kzICsgMSkudG9TdHJpbmcoKS5wYWRTdGFydCg2LCAnMCcpLAogICAgICBsZXZlbDogMSwKICAgICAgcGFyZW50SWQ6IGdvb2RzQ2F0ZWdvcnlDbGFzc2lmaWNhdGlvbnNbMF0uaWQsCiAgICAgIG5hbWU6ICfotKfniannsbvlnovliIbnsbvlkI3np7AnICsgKF9pMyArIDEpLAogICAgICBkZXNjcmlwdGlvbjogJ+i0p+eJqeexu+Wei+WIhuexu+aPj+i/sCcgKyAoX2kzICsgMSksCiAgICAgIHNvcnQ6IF9pMyArIDEKICAgIH0pOwoKICAgIF9kYXRhNC5wYXJlbnQgPSBnb29kc0NhdGVnb3J5Q2xhc3NpZmljYXRpb25zWzBdOwogICAgZ29vZHNDYXRlZ29yeUNsYXNzaWZpY2F0aW9ucy5wdXNoKF9kYXRhNCk7CiAgfQp9Cgp2YXIgZ29vZHNDYXRlZ29yaWVzID0gW107CmV4cG9ydHMuZ29vZHNDYXRlZ29yaWVzID0gZ29vZHNDYXRlZ29yaWVzOwoKZm9yICh2YXIgX2k0ID0gMDsgX2k0IDwgMTAwOyBfaTQrKykgewogIHZhciBfZGF0YTUgPSBfbW9ja2pzLmRlZmF1bHQubW9jayh7CiAgICBpZDogX21vY2tqcy5kZWZhdWx0LlJhbmRvbS5ndWlkKCkucmVwbGFjZSgvLS9nLCAnJyksCiAgICBjb2RlOiAnQycgKyAoX2k0ICsgMSkudG9TdHJpbmcoKS5wYWRTdGFydCg2LCAnMCcpLAogICAgZ29vZHNDYXRlZ29yeUNsYXNzaWZpY2F0aW9uOiBnb29kc0NhdGVnb3J5Q2xhc3NpZmljYXRpb25zWzFdLAogICAgYmF0Y2g6ICfotKfnianmibnmrKEnICsgKF9pNCArIDEpLAogICAgbmFtZTogJ+i0p+eJqeWQjeensCcgKyAoX2k0ICsgMSksCiAgICBzcGVjaWZpY2F0aW9uOiAn6LSn54mp6KeE5qC8JywKICAgIGdvb2RzVW5pdDogZ29vZHNVbml0c1tNYXRoLnJhbmRvbSgpICogKGdvb2RzVW5pdHMubGVuZ3RoID4gMTAgPyAxMCA6IGdvb2RzVW5pdHMubGVuZ3RoKSB8IDBdLAogICAgZ29vZHNDb2xvdXI6IGdvb2RzQ29sb3Vyc1tNYXRoLnJhbmRvbSgpICogKGdvb2RzQ29sb3Vycy5sZW5ndGggPiAxMCA/IDEwIDogZ29vZHNDb2xvdXJzLmxlbmd0aCkgfCAwXSwKICAgIHVuaXRQcmljZTogcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEwMCksCiAgICB1bml0V2VpZ2h0OiBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTAwKSwKICAgIHN1cHBsaWVyOiBfYm90aC5zdXBwbGllcnNbTWF0aC5yYW5kb20oKSAqIChfYm90aC5zdXBwbGllcnMubGVuZ3RoID4gMTAgPyAxMCA6IF9ib3RoLnN1cHBsaWVycy5sZW5ndGgpIHwgMF0sCiAgICBkZXNjcmlwdGlvbjogJ+i/meaYr+i0p+eJqeexu+WIqycgKyAoX2k0ICsgMSksCiAgICBzb3J0OiBfaTQgKyAxCiAgfSk7CgogIF9kYXRhNS5jbGFzc2lmaWNhdGlvbklkID0gX2RhdGE1Lmdvb2RzQ2F0ZWdvcnlDbGFzc2lmaWNhdGlvbi5pZDsKICBfZGF0YTUudW5pdElkID0gX2RhdGE1Lmdvb2RzVW5pdC5pZDsKICBfZGF0YTUuY29sb3VySWQgPSBfZGF0YTUuZ29vZHNDb2xvdXIuaWQ7CiAgX2RhdGE1LnN1cHBsaWVySWQgPSBfZGF0YTUuc3VwcGxpZXIuaWQ7CiAgZ29vZHNDYXRlZ29yaWVzLnB1c2goX2RhdGE1KTsKfQoKdmFyIGdvb2RzU3RvcmFnZU1vZGVzID0gW107CmV4cG9ydHMuZ29vZHNTdG9yYWdlTW9kZXMgPSBnb29kc1N0b3JhZ2VNb2RlczsKCmZvciAodmFyIF9pNSA9IDA7IF9pNSA8IDEwMDsgX2k1KyspIHsKICB2YXIgX2RhdGE2ID0gX21vY2tqcy5kZWZhdWx0Lm1vY2soewogICAgaWQ6IF9tb2NranMuZGVmYXVsdC5SYW5kb20uZ3VpZCgpLnJlcGxhY2UoLy0vZywgJycpLAogICAgbmFtZTogJ+WtmOWCqOaooeW8jycgKyAoX2k1ICsgMSksCiAgICBnb29kc0NhdGVnb3J5OiBnb29kc0NhdGVnb3JpZXNbTWF0aC5yYW5kb20oKSAqIChnb29kc0NhdGVnb3JpZXMubGVuZ3RoID4gMTAgPyAxMCA6IGdvb2RzQ2F0ZWdvcmllcy5sZW5ndGgpIHwgMF0sCiAgICBncm91cE51bTogcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIDEwMCksCiAgICBnb29kc1VuaXQ6IGdvb2RzVW5pdHNbTWF0aC5yYW5kb20oKSAqIChnb29kc1VuaXRzLmxlbmd0aCA+IDEwID8gMTAgOiBnb29kc1VuaXRzLmxlbmd0aCkgfCAwXSwKICAgIGxldmVsOiBwYXJzZUludChNYXRoLnJhbmRvbSgpKSwKICAgIHJhdGlvOiBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTAwKSwKICAgIHdlaWdodDogMjAwMC4wLAogICAgbGVuZ3RoOiAxMC4wLAogICAgd2lkdGg6IDEwLjAsCiAgICBoZWlnaHQ6IDEwLjAsCiAgICB2b2x1bW46IDEwMDAuMCwKICAgIHNvcnQ6IF9pNSArIDEKICB9KTsKCiAgX2RhdGE2Lmdvb2RzQ2F0ZWdvcnlJZCA9IF9kYXRhNi5nb29kc0NhdGVnb3J5LmlkOwogIF9kYXRhNi51bml0SWQgPSBfZGF0YTYuZ29vZHNVbml0LmlkOwogIGdvb2RzU3RvcmFnZU1vZGVzLnB1c2goX2RhdGE2KTsKfQoKdmFyIGdvb2RzUHJvcGVydHlWYWx1ZXMgPSBbXTsKZXhwb3J0cy5nb29kc1Byb3BlcnR5VmFsdWVzID0gZ29vZHNQcm9wZXJ0eVZhbHVlczsKCmZvciAodmFyIF9pNiA9IDA7IF9pNiA8IDI7IF9pNisrKSB7CiAgdmFyIF9kYXRhNyA9IF9tb2NranMuZGVmYXVsdC5tb2NrKHsKICAgIGlkOiBfbW9ja2pzLmRlZmF1bHQuUmFuZG9tLmd1aWQoKS5yZXBsYWNlKC8tL2csICcnKSwKICAgIGdvb2RzQ2F0ZWdvcnk6IGdvb2RzQ2F0ZWdvcmllc1tNYXRoLnJhbmRvbSgpICogKGdvb2RzQ2F0ZWdvcmllcy5sZW5ndGggPiAxMCA/IDEwIDogZ29vZHNDYXRlZ29yaWVzLmxlbmd0aCkgfCAwXSwKICAgIGdvb2RzUHJvcGVydHk6IGdvb2RzUHJvcGVydGllc1tNYXRoLnJhbmRvbSgpICogKGdvb2RzUHJvcGVydGllcy5sZW5ndGggPiAxMCA/IDEwIDogZ29vZHNQcm9wZXJ0aWVzLmxlbmd0aCkgfCAwXSwKICAgIHZhbHVlOiBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMTAwKSwKICAgIHNvcnQ6IF9pNiArIDEKICB9KTsKCiAgZ29vZHNQcm9wZXJ0eVZhbHVlcy5wdXNoKF9kYXRhNyk7Cn0="},{"version":3,"sources":["C:/Users/Neal Wang/IdeaProjects/mingxin_web/mock/databases/goods-type.js"],"names":["goodsUnits","i","data","Mock","mock","id","Random","guid","replace","name","description","sort","push","goodsColours","code","toString","padStart","goodsProperties","valueType","parseInt","Math","random","parent","goodsCategoryClassifications","level","parentId","goodsCategories","goodsCategoryClassification","batch","specification","goodsUnit","length","goodsColour","unitPrice","unitWeight","supplier","suppliers","classificationId","unitId","colourId","supplierId","goodsStorageModes","goodsCategory","groupNum","ratio","weight","width","height","volumn","goodsCategoryId","goodsPropertyValues","goodsProperty","value"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\r\nimport { suppliers } from './both'\r\n\r\nconst goodsUnits = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '货物单位' + (i + 1),\r\n    description: '这是货物单位' + (i + 1),\r\n    sort: i + 1\r\n  })\r\n  goodsUnits.push(data)\r\n}\r\nexport { goodsUnits }\r\n\r\n// 货物颜色\r\nconst goodsColours = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    name: '货物颜色' + (i + 1),\r\n    description: '这是货物颜色' + (i + 1),\r\n    sort: i + 1\r\n  })\r\n  goodsColours.push(data)\r\n}\r\nexport { goodsColours }\r\n\r\n// goods_property\r\nconst goodsProperties = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '货物类别扩展属性' + (i + 1),\r\n    description: '扩展属性描述' + (i + 1),\r\n    valueType: parseInt(Math.random() * 3)\r\n  })\r\n  data.parent = null\r\n  goodsProperties.push(data)\r\n}\r\nexport { goodsProperties }\r\n\r\nconst goodsCategoryClassifications = []\r\nfor (let i = 0; i < 2; i++) {\r\n  if (i === 0) {\r\n    const data = Mock.mock({\r\n      id: Mock.Random.guid().replace(/-/g, ''),\r\n      code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n      level: 0,\r\n      parentId: null,\r\n      name: '货物类型分类名称' + (i + 1),\r\n      description: '货物类型分类描述' + (i + 1),\r\n      sort: i + 1\r\n    })\r\n    goodsCategoryClassifications.push(data)\r\n  } else {\r\n    const data = Mock.mock({\r\n      id: Mock.Random.guid().replace(/-/g, ''),\r\n      code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n      level: 1,\r\n      parentId: goodsCategoryClassifications[0].id,\r\n      name: '货物类型分类名称' + (i + 1),\r\n      description: '货物类型分类描述' + (i + 1),\r\n      sort: i + 1\r\n    })\r\n    data.parent = goodsCategoryClassifications[0]\r\n    goodsCategoryClassifications.push(data)\r\n  }\r\n}\r\nexport { goodsCategoryClassifications }\r\n\r\nconst goodsCategories = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    code: 'C' + (i + 1).toString().padStart(6, '0'),\r\n    goodsCategoryClassification: goodsCategoryClassifications[1],\r\n    batch: '货物批次' + (i + 1),\r\n    name: '货物名称' + (i + 1),\r\n    specification: '货物规格',\r\n    goodsUnit: goodsUnits[(Math.random() * (goodsUnits.length > 10 ? 10 : goodsUnits.length) | 0)],\r\n    goodsColour: goodsColours[(Math.random() * (goodsColours.length > 10 ? 10 : goodsColours.length) | 0)],\r\n    unitPrice: parseInt(Math.random() * 100),\r\n    unitWeight: parseInt(Math.random() * 100),\r\n    supplier: suppliers[(Math.random() * (suppliers.length > 10 ? 10 : suppliers.length) | 0)],\r\n    description: '这是货物类别' + (i + 1),\r\n    sort: i + 1\r\n  })\r\n  data.classificationId = data.goodsCategoryClassification.id\r\n  data.unitId = data.goodsUnit.id\r\n  data.colourId = data.goodsColour.id\r\n  data.supplierId = data.supplier.id\r\n  goodsCategories.push(data)\r\n}\r\nexport { goodsCategories }\r\n\r\nconst goodsStorageModes = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    name: '存储模式' + (i + 1),\r\n    goodsCategory: goodsCategories[(Math.random() * (goodsCategories.length > 10 ? 10 : goodsCategories.length) | 0)],\r\n    groupNum: parseInt(Math.random() * 100),\r\n    goodsUnit: goodsUnits[(Math.random() * (goodsUnits.length > 10 ? 10 : goodsUnits.length) | 0)],\r\n    level: parseInt(Math.random()),\r\n    ratio: parseInt(Math.random() * 100),\r\n    weight: 2000.0,\r\n    length: 10.0,\r\n    width: 10.0,\r\n    height: 10.0,\r\n    volumn: 1000.0,\r\n    sort: i + 1\r\n  })\r\n  data.goodsCategoryId = data.goodsCategory.id\r\n  data.unitId = data.goodsUnit.id\r\n  goodsStorageModes.push(data)\r\n}\r\nexport { goodsStorageModes }\r\n\r\nconst goodsPropertyValues = []\r\nfor (let i = 0; i < 2; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    goodsCategory: goodsCategories[(Math.random() * (goodsCategories.length > 10 ? 10 : goodsCategories.length) | 0)],\r\n    goodsProperty: goodsProperties[(Math.random() * (goodsProperties.length > 10 ? 10 : goodsProperties.length) | 0)],\r\n    value: parseInt(Math.random() * 100),\r\n    sort: i + 1\r\n  })\r\n  goodsPropertyValues.push(data)\r\n}\r\nexport { goodsPropertyValues }\r\n"]}]}