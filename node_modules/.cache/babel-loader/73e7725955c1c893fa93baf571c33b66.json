{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\system-manage\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\system-manage\\role.vue","mtime":1597568394935},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL05lYWwgV2FuZy9JZGVhUHJvamVjdHMvbWluZ3hpbl93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczcuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvTmVhbCBXYW5nL0lkZWFQcm9qZWN0cy9taW5neGluX3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zb3J0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFkYXB0aXZlIGZyb20gJ0AvZGlyZWN0aXZlL2VsLXRhYmxlJzsKaW1wb3J0IHNldFJ1bGUgZnJvbSAnQC91dGlscy9mb3JtLXZhbGlkYXRlJzsKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb24nOwppbXBvcnQgKiBhcyByb2xlIGZyb20gJ0AvYXBpL3N5c3RlbS1tYW5hZ2Uvcm9sZSc7CmltcG9ydCBUcmVlVHJhbnNmZXIgZnJvbSAnZWwtdHJlZS10cmFuc2Zlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUm9sZScsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogUGFnaW5hdGlvbiwKICAgIFRyZWVUcmFuc2ZlcjogVHJlZVRyYW5zZmVyCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBhZGFwdGl2ZTogYWRhcHRpdmUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhY2Nlc3M6IHRoaXMuJHN0b3JlLmdldHRlcnMuYWNjZXNzWydTeXN0ZW1NYW5hZ2UnXVsnUm9sZSddLAogICAgICBkYXRhczogbnVsbCwKICAgICAgdGl0bGU6IFsn5p2D6ZmQ5YiX6KGoJywgJ+i1i+S6iOadg+mZkCddLAogICAgICB4OiAwLAogICAgICBmcm9tRGF0YTogW3sKICAgICAgICBpZDogMSwKICAgICAgICBwaWQ6IDAsCiAgICAgICAgbGFiZWw6ICfotKfniannrqHnkIYnCiAgICAgIH0sIHsKICAgICAgICBpZDogMiwKICAgICAgICBwaWQ6IDEsCiAgICAgICAgbGFiZWw6ICfotKfnianpopzoibInCiAgICAgIH0sIHsKICAgICAgICBpZDogMywKICAgICAgICBwaWQ6IDEsCiAgICAgICAgbGFiZWw6ICduby4zJwogICAgICB9LCB7CiAgICAgICAgaWQ6IDQsCiAgICAgICAgcGlkOiAxLAogICAgICAgIGxhYmVsOiAnbm8uNCcKICAgICAgfSwgewogICAgICAgIGlkOiA1LAogICAgICAgIHBpZDogMSwKICAgICAgICBsYWJlbDogJ25vLjUnCiAgICAgIH0sIHsKICAgICAgICBpZDogNiwKICAgICAgICBwaWQ6IDIsCiAgICAgICAgbGFiZWw6ICduby42JwogICAgICB9LCB7CiAgICAgICAgaWQ6IDcsCiAgICAgICAgcGlkOiAyLAogICAgICAgIGxhYmVsOiAnbm8uNycKICAgICAgfSwgewogICAgICAgIGlkOiA4LAogICAgICAgIHBpZDogMiwKICAgICAgICBsYWJlbDogJ25vLjgnCiAgICAgIH1dLAogICAgICAvLyDmiYDmnInmnYPpmZDmlbDmja4KICAgICAgYWNjZXNzTGlzdDogW10sCiAgICAgIC8vIOivpuaDheS4readg+mZkOaVsOaNrgogICAgICBhY2Nlc3NEZXRhaWw6IFtdLAogICAgICAvLyDkv67mlLnkuK3nmoTmnKrojrflvpfnmoTmnYPpmZAKICAgICAgYWNjZXNzRnJvbTogW10sCiAgICAgIC8vIOS/ruaUueaIlua3u+WKoOaXtu+8jOWtmOaUvui1i+S6iOeahOadg+mZkAogICAgICBhY2Nlc3NUbzogW10sCiAgICAgIHR5cGU6IFt7CiAgICAgICAgaWQ6IDAsCiAgICAgICAgbmFtZTogJ+W8gOWPkeS6uuWRmCcKICAgICAgfSwgewogICAgICAgIGlkOiAxLAogICAgICAgIG5hbWU6ICfnrqHnkIblkZgnCiAgICAgIH0sIHsKICAgICAgICBpZDogMiwKICAgICAgICBuYW1lOiAn5YW25LuWJwogICAgICB9XSwKICAgICAgZGVmYXVsdFByb3BzOiB7CiAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicsCiAgICAgICAgbGFiZWw6ICdsYWJlbCcKICAgICAgfSwKICAgICAgcXVlcnk6IHsKICAgICAgICBuYW1lOiBudWxsLAogICAgICAgIHR5cGU6IG51bGwKICAgICAgfSwKICAgICAgcGFnZTogewogICAgICAgIHRvdGFsOiAwLAogICAgICAgIGN1cnJlbnQ6IDEsCiAgICAgICAgc2l6ZTogMjAKICAgICAgfSwKICAgICAgc29ydDogewogICAgICAgIHByb3A6ICdzb3J0JywKICAgICAgICBvcmRlcjogJ2FzY2VuZGluZycKICAgICAgfSwKICAgICAgZGV0YWlsOiB7CiAgICAgICAgZGlhbG9nOiB7CiAgICAgICAgICB0aXRsZTogJ+inkuiJsuS/oeaBrycsCiAgICAgICAgICB2aXNpYmxlOiBmYWxzZSwKICAgICAgICAgIGxhYmVsV2lkdGg6ICcxMjBweCcKICAgICAgICB9LAogICAgICAgIG1vZGVsczogewogICAgICAgICAgbmFtZTogbnVsbCwKICAgICAgICAgIHR5cGU6IG51bGwsCiAgICAgICAgICByZW1hcms6IG51bGwsCiAgICAgICAgICBhY2Nlc3M6IFtdCiAgICAgICAgfQogICAgICB9LAogICAgICBjcmVhdGU6IHsKICAgICAgICBkaWFsb2c6IHsKICAgICAgICAgIHRpdGxlOiAn5re75Yqg6KeS6ImyJywKICAgICAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICAgICAgbGFiZWxXaWR0aDogJzEyMHB4JwogICAgICAgIH0sCiAgICAgICAgbW9kZWxzOiB7CiAgICAgICAgICBuYW1lOiBudWxsLAogICAgICAgICAgdHlwZTogbnVsbCwKICAgICAgICAgIHJlbWFyazogbnVsbCwKICAgICAgICAgIGFjY2VzczogW10KICAgICAgICB9LAogICAgICAgIHJ1bGVzOiB7CiAgICAgICAgICBuYW1lOiBzZXRSdWxlKCfop5LoibLlkI3np7AnLCBbewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgICAgfSwgewogICAgICAgICAgICBsZW5ndGg6IFswLCA1MF0KICAgICAgICAgIH1dKSwKICAgICAgICAgIHR5cGU6IHNldFJ1bGUoJ+inkuiJsuexu+WeiycsIFt7CiAgICAgICAgICAgIHNlbGVjdGVkOiB0cnVlCiAgICAgICAgICB9XSksCiAgICAgICAgICByZW1hcms6IHNldFJ1bGUoJ+Wkh+azqCcsIFt7CiAgICAgICAgICAgIGxlbmd0aDogWzAsIDI1NV0KICAgICAgICAgIH1dKQogICAgICAgIH0KICAgICAgfSwKICAgICAgdXBkYXRlOiB7CiAgICAgICAgZGlhbG9nOiB7CiAgICAgICAgICB0aXRsZTogJ+e8lui+keinkuiJsuS/oeaBrycsCiAgICAgICAgICB2aXNpYmxlOiBmYWxzZSwKICAgICAgICAgIGxhYmVsV2lkdGg6ICcxMjBweCcKICAgICAgICB9LAogICAgICAgIG1vZGVsczogewogICAgICAgICAgbmFtZTogbnVsbCwKICAgICAgICAgIHR5cGU6IG51bGwsCiAgICAgICAgICByZW1hcms6IG51bGwsCiAgICAgICAgICBhY2Nlc3M6IG51bGwKICAgICAgICB9LAogICAgICAgIHJ1bGVzOiB7CiAgICAgICAgICBuYW1lOiBzZXRSdWxlKCfop5LoibLlkI3np7AnLCBbewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgICAgfSwgewogICAgICAgICAgICBsZW5ndGg6IFswLCA1MF0KICAgICAgICAgIH1dKSwKICAgICAgICAgIHR5cGU6IHNldFJ1bGUoJ+inkuiJsuexu+WIqycsIFt7CiAgICAgICAgICAgIHNlbGVjdGVkOiB0cnVlCiAgICAgICAgICB9XSksCiAgICAgICAgICByZW1hcms6IHNldFJ1bGUoJ+Wkh+azqCcsIFt7CiAgICAgICAgICAgIGxlbmd0aDogWzAsIDI1NV0KICAgICAgICAgIH1dKQogICAgICAgIH0KICAgICAgfSwKICAgICAgbG9hZGluZzogewogICAgICAgIGxpc3Q6IHRydWUsCiAgICAgICAgZXhwb3J0OiBmYWxzZSwKICAgICAgICBkZXRhaWw6IGZhbHNlLAogICAgICAgIHVwZGF0ZTogZmFsc2UKICAgICAgfSwKICAgICAgc29ydE9yZGVyczogWydhc2NlbmRpbmcnLCAnZGVzY2VuZGluZyddCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YXMoKTsKICAgIHRoaXMuZ2V0QWxsQWNjZXNzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhczogZnVuY3Rpb24gZ2V0RGF0YXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmcubGlzdCA9IHRydWU7CiAgICAgIHJvbGUuZ2V0TGlzdCh0aGlzLnF1ZXJ5LCB0aGlzLnBhZ2UsIHRoaXMuc29ydCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5kYXRhcyA9IHJlc3BvbnNlLmRhdGEuaXRlbXM7CiAgICAgICAgX3RoaXMucGFnZS50b3RhbCA9IHJlc3BvbnNlLmRhdGEudG90YWw7CiAgICAgICAgX3RoaXMubG9hZGluZy5saXN0ID0gZmFsc2U7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZWplY3QpIHsKICAgICAgICBfdGhpcy5sb2FkaW5nLmxpc3QgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5pWw57uE6L2s5Li6VHJlZQogICAgYXJyYXlUb1RyZWU6IGZ1bmN0aW9uIGFycmF5VG9UcmVlKGxpc3QpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgcGlkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsOwogICAgICByZXR1cm4gbGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5waWQgPT09IHBpZDsKICAgICAgfSkubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaXRlbSksIHt9LCB7CiAgICAgICAgICBjaGlsZHJlbjogX3RoaXMyLmFycmF5VG9UcmVlKGxpc3QsIGl0ZW0uaWQpCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGFycmF5VG9UcmVlMjogZnVuY3Rpb24gYXJyYXlUb1RyZWUyKGxpc3QpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgcGlkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwOwogICAgICByZXR1cm4gbGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5waWQgPT09IHBpZDsKICAgICAgfSkubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaXRlbSksIHt9LCB7CiAgICAgICAgICBjaGlsZHJlbjogX3RoaXMzLmFycmF5VG9UcmVlKGxpc3QsIGl0ZW0uaWQpCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIFRyZWXovazkuLphcnJheQogICAgdHJlZVRvQXJyYXk6IGZ1bmN0aW9uIHRyZWVUb0FycmF5KGRhdGEpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gZGF0YS5yZWR1Y2UoZnVuY3Rpb24gKGFyciwgX3JlZikgewogICAgICAgIHZhciBpZCA9IF9yZWYuaWQsCiAgICAgICAgICAgIGxhYmVsID0gX3JlZi5sYWJlbCwKICAgICAgICAgICAgcGlkID0gX3JlZi5waWQsCiAgICAgICAgICAgIF9yZWYkY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLAogICAgICAgICAgICBjaGlsZHJlbiA9IF9yZWYkY2hpbGRyZW4gPT09IHZvaWQgMCA/IFtdIDogX3JlZiRjaGlsZHJlbjsKICAgICAgICByZXR1cm4gYXJyLmNvbmNhdChbewogICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgbGFiZWw6IGxhYmVsLAogICAgICAgICAgcGlkOiBwaWQKICAgICAgICB9XSwgX3RoaXM0LnRyZWVUb0FycmF5KGNoaWxkcmVuLCBpZCkpOwogICAgICB9LCBbXSk7CiAgICB9LAogICAgZ2V0QWxsQWNjZXNzOiBmdW5jdGlvbiBnZXRBbGxBY2Nlc3MoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgcm9sZS5nZXRBbGxBY2Nlc3MoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzNS5hY2Nlc3NMaXN0ID0gX3RoaXM1LmFycmF5VG9UcmVlKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVqZWN0KSB7fSk7CiAgICB9LAogICAgaGFuZGxlUXVlcnk6IGZ1bmN0aW9uIGhhbmRsZVF1ZXJ5KCkgewogICAgICB0aGlzLnBhZ2UuY3VycmVudCA9IDE7CiAgICAgIHRoaXMuZ2V0RGF0YXMoKTsKICAgIH0sCiAgICBoYW5kbGVTb3J0OiBmdW5jdGlvbiBoYW5kbGVTb3J0KGRhdGEpIHsKICAgICAgdGhpcy5zb3J0LnByb3AgPSBkYXRhLnByb3A7CiAgICAgIHRoaXMuc29ydC5vcmRlciA9IGRhdGEub3JkZXI7CiAgICAgIHRoaXMuZ2V0RGF0YXMoKTsKICAgIH0sCiAgICBoYW5kbGVEZXRhaWw6IGZ1bmN0aW9uIGhhbmRsZURldGFpbChyb3cpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICAvLyDoi6XliJfooajmlbDmja7lsZXnpLrkuoblhajpg6jlsZ7mgKfvvIzliJnlj6/nm7TmjqXmi7fotJ3liJfooajmlbDmja4KICAgICAgdGhpcy5kZXRhaWwuZGlhbG9nLnZpc2libGUgPSB0cnVlOwogICAgICB0aGlzLmxvYWRpbmcuZGV0YWlsID0gdHJ1ZTsKICAgICAgcm9sZS5nZXQocm93LmlkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzNi5kZXRhaWwubW9kZWxzID0gcmVzcG9uc2UuZGF0YS5yb2xlOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsgLy8g6I635Y+W5q2kaWTnmoRhY2Nlc3PvvIzovazmiJB0cmVlCgogICAgICAgIF90aGlzNi5hY2Nlc3NEZXRhaWwgPSBfdGhpczYuYXJyYXlUb1RyZWUocmVzcG9uc2UuZGF0YS5hY2Nlc3MpOwogICAgICAgIF90aGlzNi5sb2FkaW5nLmRldGFpbCA9IGZhbHNlOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVqZWN0KSB7CiAgICAgICAgX3RoaXM2LmxvYWRpbmcuZGV0YWlsID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOebkeWQrOepv+aireahhue7hOS7tua3u+WKoCwgYWNjZXNzVG/nlKjmnaXmjqXlj5fmt7vliqDkuI7kv67mlLnkuK3nmoQg6LWL5LqI5p2D6ZmQ5pWw5o2uCiAgICBhZGQ6IGZ1bmN0aW9uIGFkZChmcm9tRGF0YSwgdG9EYXRhLCBvYmopIHsKICAgICAgdGhpcy5hY2Nlc3NUbyA9IHRvRGF0YTsKICAgIH0sCiAgICAvLyDnm5HlkKznqb/moq3moYbnu4Tku7bnp7vpmaQsIHRvRGF0YeS4uuWPs+S+p+adg+mZkOaVsOaNrgogICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoZnJvbURhdGEsIHRvRGF0YSwgb2JqKSB7CiAgICAgIHRoaXMuYWNjZXNzVG8gPSB0b0RhdGE7CiAgICB9LAogICAgaGFuZGxlQ3JlYXRlOiBmdW5jdGlvbiBoYW5kbGVDcmVhdGUoKSB7CiAgICAgIHRoaXMuY3JlYXRlLmRpYWxvZy52aXNpYmxlID0gdHJ1ZTsKICAgICAgdGhpcy54ID0gMTsKICAgICAgY29uc29sZS5sb2codGhpcy5hY2Nlc3NMaXN0KTsKICAgIH0sCiAgICBjcmVhdGVEYXRhOiBmdW5jdGlvbiBjcmVhdGVEYXRhKCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbJ2Zvcm1DcmVhdGUnXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4gZmFsc2U7CgogICAgICAgIGlmIChfdGhpczcuYWNjZXNzVG8gIT09IFtdKSB7CiAgICAgICAgICBfdGhpczcuY3JlYXRlLm1vZGVscy5hY2Nlc3MgPSBfdGhpczcudHJlZVRvQXJyYXkoX3RoaXM3LmFjY2Vzc1RvKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM3LmNyZWF0ZS5tb2RlbHMuYWNjZXNzID0gW107CiAgICAgICAgfQoKICAgICAgICByb2xlLmNyZWF0ZShfdGhpczcuY3JlYXRlLm1vZGVscykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIC8vIOS4uuaWueS+v+i/nue7rea3u+WKoO+8jGNyZWF0ZeWvueivneahhuS4jeWFs+mXrQogICAgICAgICAgLy8g6ZyA6KaB5riF56m655qE6KGo5Y2V77yM5omL5Yqo5riF56m677yM6Iez5bCR5riF56m65LiA5Liq5b+F5aGr6aG577yM6Ziy5q2i54K55Ye75Lik6YGNCiAgICAgICAgICBfdGhpczcuY3JlYXRlLm1vZGVscy5uYW1lID0gJyc7IC8vIOWboOS4uua3u+WKoOS/ruaUueWFseeUqOS6hmFjY2Vzc1Rv77yM6L+b6KGM5riF56m65pON5L2cCgogICAgICAgICAgX3RoaXM3LmFjY2Vzc1RvID0gW107IC8vIOmHjeaWsOiOt+WPluaVsOaNrgoKICAgICAgICAgIF90aGlzNy5nZXREYXRhcygpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZWplY3QpIHt9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5LiA5Liq5pWw57uE5Y675o6J5Y+m5LiA5Liq5pWw57uE5Lit55qE5a+56LGhCiAgICBtb3ZlVG9EYXRhOiBmdW5jdGlvbiBtb3ZlVG9EYXRhKGZyb21EYXRhLCB0b0RhdGEpIHsKICAgICAgdmFyIGlkTGlzdCA9IHRvRGF0YS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdi5pZDsKICAgICAgfSk7IC8vIGNvbnNvbGUubG9nKGlkTGlzdCkKCiAgICAgIGZyb21EYXRhID0gZnJvbURhdGEuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuICFpZExpc3QuaW5jbHVkZXMoaXRlbS5pZCk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZnJvbURhdGE7CiAgICB9LAogICAgaGFuZGxlVXBkYXRlOiBmdW5jdGlvbiBoYW5kbGVVcGRhdGUocm93KSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgLy8g6Iul5YiX6KGo5pWw5o2u5bGV56S65LqG5YWo6YOo5bGe5oCn77yM5YiZ5Y+v55u05o6l5ou36LSd5YiX6KGo5pWw5o2u55So5LqO57yW6L6RCiAgICAgIC8vIHRoaXMuaGFuZGxlRGV0YWlsKHJvdykKICAgICAgdGhpcy5sb2FkaW5nLnVwZGF0ZSA9IHRydWU7CiAgICAgIHJvbGUuZ2V0KHJvdy5pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczguZGV0YWlsLm1vZGVscyA9IHJlc3BvbnNlLmRhdGEucm9sZTsgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgICAgLy8g6I635Y+W5q2kaWTnmoRhY2Nlc3PvvIzovazmiJB0cmVlCgogICAgICAgIF90aGlzOC5hY2Nlc3NEZXRhaWwgPSBfdGhpczguYXJyYXlUb1RyZWUocmVzcG9uc2UuZGF0YS5hY2Nlc3MpOyAvLyBjb25zb2xlLmxvZyh0aGlzLmRldGFpbC5tb2RlbHMpCgogICAgICAgIF90aGlzOC51cGRhdGUubW9kZWxzID0gT2JqZWN0LmFzc2lnbih7fSwgX3RoaXM4LmRldGFpbC5tb2RlbHMpOyAvLyBjb25zb2xlLmxvZyh0aGlzLnVwZGF0ZS5tb2RlbHMpCiAgICAgICAgLy8g6I635Y+W5b2T5YmN5bey5pyJ5p2D6ZmQOiB0cmVl5Z6LCgogICAgICAgIF90aGlzOC5hY2Nlc3NUbyA9IF90aGlzOC5hY2Nlc3NEZXRhaWw7IC8vIOaJgOacieadg+mZkOWOu+aOieW9k+WJjeadg+mZkCA9IOacquiOt+W+l+adg+mZkDogYWNjZXNzZnJvbTogYXJyYXkKCiAgICAgICAgdmFyIGFjY2Vzc2Zyb20gPSBfdGhpczgubW92ZVRvRGF0YShfdGhpczgudHJlZVRvQXJyYXkoX3RoaXM4LmFjY2Vzc0xpc3QpLCBfdGhpczgudHJlZVRvQXJyYXkoX3RoaXM4LmFjY2Vzc1RvKSk7CgogICAgICAgIGNvbnNvbGUubG9nKGFjY2Vzc2Zyb20pOyAvLyBjb25zb2xlLmxvZyh0aGlzLnRyZWVUb0FycmF5KHRoaXMuYWNjZXNzTGlzdCkpCiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy50cmVlVG9BcnJheSh0aGlzLmFjY2Vzc1RvKSkKCiAgICAgICAgaWYgKF90aGlzOC54ID09PSAwKSB7CiAgICAgICAgICBfdGhpczguYWNjZXNzRnJvbSA9IF90aGlzOC5hcnJheVRvVHJlZShhY2Nlc3Nmcm9tKTsKICAgICAgICB9CgogICAgICAgIGlmIChfdGhpczgueCA9PT0gMSkgewogICAgICAgICAgX3RoaXM4LmFjY2Vzc0Zyb20gPSBfdGhpczguYXJyYXlUb1RyZWUyKGFjY2Vzc2Zyb20pOwogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2coX3RoaXM4LmFjY2Vzc0Zyb20pOwogICAgICAgIF90aGlzOC5sb2FkaW5nLnVwZGF0ZSA9IGZhbHNlOwogICAgICAgIF90aGlzOC51cGRhdGUuZGlhbG9nLnZpc2libGUgPSB0cnVlOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVqZWN0KSB7CiAgICAgICAgX3RoaXM4LmxvYWRpbmcudXBkYXRlID0gZmFsc2U7CiAgICAgIH0pOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM4LiRyZWZzWydmb3JtVXBkYXRlJ10uY2xlYXJWYWxpZGF0ZSgpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVEYXRhOiBmdW5jdGlvbiB1cGRhdGVEYXRhKCkgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbJ2Zvcm1VcGRhdGUnXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4gZmFsc2U7CiAgICAgICAgX3RoaXM5LnVwZGF0ZS5tb2RlbHMuYWNjZXNzID0gX3RoaXM5LnRyZWVUb0FycmF5KF90aGlzOS5hY2Nlc3NUbyk7CiAgICAgICAgdmFyIHRlbXBEYXRhID0gT2JqZWN0LmFzc2lnbih7fSwgX3RoaXM5LnVwZGF0ZS5tb2RlbHMpOwogICAgICAgIHJvbGUudXBkYXRlKHRlbXBEYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgLy8g6YeN5paw6I635Y+W5pWw5o2uCiAgICAgICAgICBfdGhpczkuZ2V0RGF0YXMoKTsKCiAgICAgICAgICBfdGhpczkudXBkYXRlLmRpYWxvZy52aXNpYmxlID0gZmFsc2U7CiAgICAgICAgICBfdGhpczkuYWNjZXNzVG8gPSBbXTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVqZWN0KSB7fSk7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKHJvdykgewogICAgICB0aGlzLmRlbGV0ZURhdGEoW3Jvdy5pZF0pOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZXM6IGZ1bmN0aW9uIGhhbmRsZURlbGV0ZXMocm93KSB7CiAgICAgIGlmICh0aGlzLiRyZWZzLmxpc3RUYWJsZS5zZWxlY3Rpb24ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgICBtZXNzYWdlOiAn6K+35Zyo5LiL6Z2i6KGo5qC855qE5bem5L6n5Yu+6YCJ6ZyA6KaB5Yig6Zmk55qE5pWw5o2uJywKICAgICAgICAgIGR1cmF0aW9uOiA0MDAwCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICB2YXIgaWRzID0gW107CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy4kcmVmcy5saXN0VGFibGUuc2VsZWN0aW9uKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGl0ZW0gPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIGlkcy5wdXNoKGl0ZW0uaWQpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICB0aGlzLmRlbGV0ZURhdGEoaWRzKTsKICAgIH0sCiAgICBkZWxldGVEYXRhOiBmdW5jdGlvbiBkZWxldGVEYXRhKGlkcykgewogICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7CgogICAgICB0aGlzLiRjb25maXJtKCfmlbDmja7liKDpmaTlkI7vvIzkuI3lj6/mgaLlpI0sIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcm9sZS5kZWwoaWRzKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgLy8g6YeN5paw6I635Y+W5pWw5o2uCiAgICAgICAgICBfdGhpczEwLmdldERhdGFzKCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlamVjdCkge30pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},null]}