{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\databases\\system.js","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\databases\\system.js","mtime":1593517267184},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJDOi9Vc2Vycy9OZWFsIFdhbmcvSWRlYVByb2plY3RzL21pbmd4aW5fd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnVzZXJzID0gdm9pZCAwOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZSIpOwoKdmFyIF9tb2NranMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIm1vY2tqcyIpKTsKCi8vIHN5c191c2VyCnZhciB1c2VycyA9IFtdOwpleHBvcnRzLnVzZXJzID0gdXNlcnM7Cgpmb3IgKHZhciBpID0gMDsgaSA8IDEwMDsgaSsrKSB7CiAgdmFyIGRhdGEgPSBfbW9ja2pzLmRlZmF1bHQubW9jayh7CiAgICBpZDogX21vY2tqcy5kZWZhdWx0LlJhbmRvbS5ndWlkKCkucmVwbGFjZSgvLS9nLCAnJyksCiAgICB1bmFtZTogJ+eUqOaItycgKyAoaSArIDEpLAogICAgbmljazogJ+aYteensCcgKyAoaSArIDEpLAogICAgcHdkOiAnMTIzNDU2JywKICAgIHNhbHQ6ICdzZGdnZGdmZGdmZycsCiAgICBsb2NrOiBwYXJzZUludChNYXRoLnJhbmRvbSgpICogMiksCiAgICBjcmVhdGVkOiAnMjAxOS0xMC0wNSAxMjoyMzowNScsCiAgICB1cGRhdGVkOiAnMjAxOS0xMC0wMTAgMTI6MjM6MDUnCiAgfSk7CgogIHVzZXJzLnB1c2goZGF0YSk7Cn0="},{"version":3,"sources":["C:/Users/Neal Wang/IdeaProjects/mingxin_web/mock/databases/system.js"],"names":["users","i","data","Mock","mock","id","Random","guid","replace","uname","nick","pwd","salt","lock","parseInt","Math","random","created","updated","push"],"mappings":";;;;;;;;;;;AAAA;;AACA;AACA,IAAMA,KAAK,GAAG,EAAd;;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,MAAMC,IAAI,GAAGC,gBAAKC,IAAL,CAAU;AACrBC,IAAAA,EAAE,EAAEF,gBAAKG,MAAL,CAAYC,IAAZ,GAAmBC,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CADiB;AAErBC,IAAAA,KAAK,EAAE,QAAQR,CAAC,GAAG,CAAZ,CAFc;AAGrBS,IAAAA,IAAI,EAAE,QAAQT,CAAC,GAAG,CAAZ,CAHe;AAIrBU,IAAAA,GAAG,EAAE,QAJgB;AAKrBC,IAAAA,IAAI,EAAE,aALe;AAMrBC,IAAAA,IAAI,EAAEC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAjB,CANO;AAOrBC,IAAAA,OAAO,EAAE,qBAPY;AAQrBC,IAAAA,OAAO,EAAE;AARY,GAAV,CAAb;;AAUAlB,EAAAA,KAAK,CAACmB,IAAN,CAAWjB,IAAX;AACD","sourcesContent":["import Mock from 'mockjs'\r\n// sys_user\r\nconst users = []\r\nfor (let i = 0; i < 100; i++) {\r\n  const data = Mock.mock({\r\n    id: Mock.Random.guid().replace(/-/g, ''),\r\n    uname: '用户' + (i + 1),\r\n    nick: '昵称' + (i + 1),\r\n    pwd: '123456',\r\n    salt: 'sdggdgfdgfg',\r\n    lock: parseInt(Math.random() * 2),\r\n    created: '2019-10-05 12:23:05',\r\n    updated: '2019-10-010 12:23:05'\r\n  })\r\n  users.push(data)\r\n}\r\nexport { users }\r\n"]}]}