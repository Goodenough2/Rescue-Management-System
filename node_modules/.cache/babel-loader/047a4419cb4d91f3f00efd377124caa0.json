{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\login\\index.vue","mtime":1593517269064},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Neal Wang/IdeaProjects/mingxin_web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _settings = require(\"@/settings\");\n\nvar _formValidate = _interopRequireDefault(require(\"@/utils/form-validate\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Login',\n  data: function data() {\n    return {\n      title: _settings.title,\n      loginAccount: {\n        username: 'admin',\n        password: '111111'\n      },\n      rules: {\n        username: (0, _formValidate.default)('账号', [{\n          required: true,\n          trigger: 'change'\n        }]),\n        password: (0, _formValidate.default)('密码', [{\n          required: true,\n          trigger: 'change'\n        }])\n      },\n      passwordVisible: false,\n      capslockTooltip: false,\n      loading: false,\n      showDialog: false,\n      redirect: undefined,\n      otherQuery: {}\n    };\n  },\n  computed: {\n    passwordType: function passwordType() {\n      return this.passwordVisible ? '' : 'password';\n    },\n    eyeStyle: function eyeStyle() {\n      return this.passwordVisible ? 'vue-icon-eye-open' : 'vue-icon-eye-close';\n    }\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        var query = route.query;\n\n        if (query) {\n          this.redirect = query.redirect;\n          this.otherQuery = this.getOtherQuery(query);\n        }\n      },\n      immediate: true\n    }\n  },\n  created: function created() {// window.addEventListener('storage', this.afterQRScan)\n  },\n  mounted: function mounted() {\n    if (this.loginAccount.username === '') {\n      this.$refs.username.focus();\n    } else if (this.loginAccount.password === '') {\n      this.$refs.password.focus();\n    }\n  },\n  destroyed: function destroyed() {// window.removeEventListener('storage', this.afterQRScan)\n  },\n  methods: {\n    showPassword: function showPassword() {\n      this.passwordVisible = !this.passwordVisible;\n    },\n    checkCapslock: function checkCapslock() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          shiftKey = _ref.shiftKey,\n          key = _ref.key;\n\n      if (key && key.length === 1) {\n        if (shiftKey && key >= 'a' && key <= 'z' || !shiftKey && key >= 'A' && key <= 'Z') {\n          this.capslockTooltip = true;\n        } else {\n          this.capslockTooltip = false;\n        }\n      }\n\n      if (key === 'CapsLock' && this.capslockTooltip === true) {\n        this.capslockTooltip = false;\n      }\n    },\n    handleLogin: function handleLogin() {\n      var _this = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this.loading = true;\n\n          _this.$store.dispatch('account/login', _this.loginAccount).then(function () {\n            _this.$router.push({\n              path: _this.redirect || '/',\n              query: _this.otherQuery\n            });\n\n            _this.loading = false;\n          }).catch(function () {\n            _this.loading = false;\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    getOtherQuery: function getOtherQuery(query) {\n      return Object.keys(query).reduce(function (acc, cur) {\n        if (cur !== 'redirect') {\n          acc[cur] = query[cur];\n        }\n\n        return acc;\n      }, {});\n    }\n  }\n};\nexports.default = _default;",null]}