{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\order-manage\\order-detail.js","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\mock\\order-manage\\order-detail.js","mtime":1593517267220},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Neal Wang/IdeaProjects/mingxin_web/mock/order-manage/order-detail.js"],"names":["orderDetailController","url","type","response","config","body","page","current","size","sort","property","direction","query","orderCode","goodsCategoryId","status","operatorId","queryList","orderDetails","filter","item","order","code","includes","goodsCategory","id","pageList","index","responses","success","data","total","length","items","getDataFailure","find","notFound","map","name","Mock","Random","guid","replace","orders","orderId","goodsCategories","push","createSuccess","createFailure","prevDatas","rankupDataIsTop","prev","a","b","slice","rankSuccess","rankFailure","oldData","updateDataNotFound","updateSuccess","updateFailure","ids","notFoundCount","hasAssociatedDataCount","message","findIndex","splice","res","deleteDataNotFoundOrAssociated","allDeleteDataNotFound","partialDeleteDataNotFound","allDeleteDataAssociated","partialDeleteDataAssociated","deleteSuccess","deleteFailure"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\r\nimport responses from '../responses'\r\nimport {orderDetails} from '../databases/order'\r\nimport { users } from '../databases/system'\r\nimport { goodsCategories } from \"../databases/goods-type\"\r\nimport { orders } from \"../databases/order\"\r\nimport { getUrlSection } from '../utils'\r\n\r\nexport const orderDetailController = [\r\n\r\n  // 获取列表数据（查询、翻页）\r\n  {\r\n    url: '/order-detail/list',\r\n    type: 'post',\r\n    response: config => {\r\n      try {\r\n        const { current = 1, size = 20 } = config.body.page\r\n        const { property, direction } = config.body.sort\r\n        const { orderCode, goodsCategoryId, status, operatorId } = config.body.query\r\n\r\n        // 查询\r\n        const queryList = orderDetails.filter(item => {\r\n          if (orderCode && !item.order.code.includes(orderCode)) return false\r\n          if (goodsCategoryId && item.goodsCategory.id !== goodsCategoryId) return false\r\n          if (status && item.status !== status * 1) return false\r\n          if (operatorId && item.operatorId !== operatorId ) return false\r\n          return true\r\n        })\r\n\r\n        // 排序 中文字符串由于node的原因，支持不好\r\n        // 数据库表中若含有sort字段，则页面中任何列都不应有排序功能，数据应按照sort的值进行排序\r\n        // 注意嵌套类别的排序。例如，此处应该是先按仓库类型的sort值进行排序，相同的情况下，在按照仓库的sort值进行排序\r\n        // 因js不便进行多属性的排序，此处未实现\r\n        // let sortList = queryList\r\n        // if (property && (direction === 'ascending' || direction === 'descending')) {\r\n        //   sortList = queryList.sort((a, b) => {\r\n        //     let result = 0\r\n        //     const getValue = new Function('obj', 'return obj.' + property)\r\n        //     const valueA = getValue(a)\r\n        //     const valueB = getValue(b)\r\n        //     if (Number.isFinite(valueA)) {\r\n        //       result = valueA - valueB\r\n        //     } else {\r\n        //       result = valueA.localeCompare(valueB, 'zh')\r\n        //     }\r\n        //     if (direction === 'descending') {\r\n        //       result = -result\r\n        //     }\r\n        //     return result\r\n        //   })\r\n        // }\r\n\r\n        // 翻页\r\n        const pageList = queryList.filter((item, index) => index < size * current && index >= size * (current - 1))\r\n\r\n        return {\r\n          ...responses.success,\r\n          data: {\r\n            total: queryList.length,\r\n            // 若前端列表页仅显示部分属性，则需抽取相应的属性及数据\r\n            // 在涉及不应给用户看到的重要数据时，也应抽取相应的属性及数据，不应返回全部数据\r\n            items: pageList // 返回所有数据\r\n            // items: pageList.map((\r\n            //   {\r\n            //     id,\r\n            //     code,\r\n            //     typeId,\r\n            //     type,\r\n            //     quality,\r\n            //     amount,\r\n            //     qualityForReal,\r\n            //     amountForReal,\r\n            //     statusId,\r\n            //     status,\r\n            //     customerId,\r\n            //     customer,\r\n            //     deliveryTime,\r\n            //     operatorId,\r\n            //     operator\r\n            //\r\n            //   }) => (\r\n            //   {\r\n            //     id,\r\n            //     code,\r\n            //     typeId,\r\n            //     type: { name: type.name },\r\n            //     quality,\r\n            //     amount,\r\n            //     qualityForReal,\r\n            //     amountForReal,\r\n            //     statusId,\r\n            //     status:{ id:status.id, name: status.name },\r\n            //     customerId,\r\n            //     customer: { name: customer.name },\r\n            //     deliveryTime,\r\n            //     operatorId,\r\n            //     operator: { unname: operator.unname }\r\n            //   }))\r\n          }\r\n        }\r\n      } catch {\r\n        return { ...responses.getDataFailure }\r\n      }\r\n    }\r\n  },\r\n\r\n  // 根据id获取数据，兼顾detail和update时的获取数据\r\n  {\r\n    url: '/order-detail/[\\\\w\\\\d]{32}/detail',\r\n    type: 'get',\r\n    response: config => {\r\n      try {\r\n        const id = getUrlSection(config.url, 2)\r\n        const data = orderDetails.find(item => item.id === id)\r\n        if (data) {\r\n          return {\r\n            ...responses.success,\r\n            // 在涉及不应给用户看到的重要数据时，也应抽取相应的属性及数据，不应返回全部数据\r\n            data // 返回所有数据\r\n            // data:\r\n            //   {\r\n            //     id: data.id,\r\n            //     code: data.code,\r\n            //     typeId: data.typeId,\r\n            //     type: { name: data.type.name },\r\n            //     quality: data.quality,\r\n            //     amount: data.amount,\r\n            //     qualityForReal: data.qualityForReal,\r\n            //     amountForReal: data.amountForReal,\r\n            //     statusId: data.statusId,\r\n            //     status:{ id:status.id, name: status.name },\r\n            //     customerId: data.customerId,\r\n            //     customer: { name: data.customer.name },\r\n            //     deliveryTime: data.deliveryTime,\r\n            //     operatorId: data.operatorId,\r\n            //     operator: { unname: data.operator.unname },\r\n            //   }\r\n          }\r\n        } else {\r\n          return { ...responses.notFound }\r\n        }\r\n      } catch {\r\n        return { ...responses.getDataFailure }\r\n      }\r\n    }\r\n  },\r\n\r\n  // 获取下拉列表选项形式的数据\r\n  {\r\n    url: '/order-detail/selectlist',\r\n    type: 'get',\r\n    response: config => {\r\n      try {\r\n        const data = orderDetails.map(({ id, name }) => ({ id, name }))\r\n        return { data, ...responses.success }\r\n      } catch {\r\n        return { ...responses.getDataFailure }\r\n      }\r\n    }\r\n  },\r\n\r\n  // 添加数据\r\n  {\r\n    url: '/order-detail/create',\r\n    type: 'post',\r\n    response: config => {\r\n      try {\r\n        const data = config.body\r\n        // // 冲突检测\r\n        // if (orderDetails.some(item => item.code === data.code)) {\r\n        //   return { ...responses.createConflict, message: '已存在同名的采购订单号' }\r\n        // }\r\n\r\n        // id\r\n        data.id = Mock.Random.guid().replace(/-/g, '')\r\n        // order\r\n        data.order = orders.find(item => item.id === data.orderId)\r\n        // goodsCategory\r\n        data.goodsCategory = goodsCategories.find(item => item.id === data.goodsCategoryId)\r\n\r\n        orderDetails.push(data)\r\n        return { ...responses.createSuccess }\r\n      } catch {\r\n        return { ...responses.createFailure }\r\n      }\r\n    }\r\n  },\r\n\r\n  // 排序上移\r\n  {\r\n    url: '/order-detail/[\\\\w\\\\d]{32}/rankup',\r\n    type: 'patch',\r\n    response: config => {\r\n      try {\r\n        const id = getUrlSection(config.url, 2)\r\n        const data = orderDetails.find(item => item.id === id)\r\n        // 此处应为同一仓库类别下的仓库排序移动，不同类别下的仓库，sort值没有比较依据\r\n        // 因mock数据的问题，此处未实现同一仓库类别下的仓库排序上移功能\r\n        const prevDatas = orderDetails.filter(item => item.sort < data.sort)\r\n        if (prevDatas.length === 0) {\r\n          return { ...responses.rankupDataIsTop }\r\n        }\r\n        const prev = prevDatas.sort((a, b) => {\r\n          return b.sort - a.sort\r\n        }).slice(0, 1)[0]\r\n        const sort = data.sort\r\n        data.sort = prev.sort\r\n        prev.sort = sort\r\n        return { ...responses.rankSuccess }\r\n      } catch {\r\n        return { ...responses.rankFailure }\r\n      }\r\n    }\r\n  },\r\n\r\n  // 更新数据\r\n  {\r\n    url: '/order-detail/update',\r\n    type: 'put',\r\n    response: config => {\r\n      try {\r\n        const data = config.body\r\n        const oldData = orderDetails.find(item => item.id === data.id)\r\n        if (!oldData) return { ...responses.updateDataNotFound }\r\n\r\n        // 冲突检测\r\n        //  if (orderPurchases.some(item => item.code === data.code)) {\r\n        //    return { ...responses.updateConflict, message: '已存在同名的订单号' }\r\n        //  }\r\n\r\n        // 需要更新的字段，不采取整个对象更新的方式\r\n\r\n\r\n        return { ...responses.updateSuccess }\r\n      } catch {\r\n        return { ...responses.updateFailure }\r\n      }\r\n    }\r\n  },\r\n\r\n  // 删除、批量删除数据\r\n  {\r\n    url: '/order-detail/delete',\r\n    type: 'delete',\r\n    response: config => {\r\n      try {\r\n        const { ids } = config.body\r\n        let notFoundCount = 0\r\n        let hasAssociatedDataCount = 0\r\n        let message = ''\r\n        for (const id of ids) {\r\n          const index = orderDetails.findIndex((item) => {\r\n            return item.id === id\r\n          })\r\n          if (index < 0) {\r\n            notFoundCount++\r\n            continue\r\n          }\r\n\r\n          // 服务器端需要检测是否有多表关联的情况，若有，则不可删除\r\n          // 并且记录message，提示详细问题\r\n          // 此处未检测\r\n          // eslint-disable-next-line no-constant-condition\r\n          if (false) {\r\n            hasAssociatedDataCount++\r\n            if (!message) message = '……'\r\n            continue\r\n          }\r\n          orderDetails.splice(index, 1)\r\n        }\r\n        if (notFoundCount > 0 && hasAssociatedDataCount > 0) { // 部分数据不存在，部分数据有关联\r\n          const res = responses.deleteDataNotFoundOrAssociated\r\n          res.message += message\r\n          return res\r\n        } else if (notFoundCount === ids.length) { // 全部数据不存在。适用于删除或批量删除\r\n          return { ...responses.allDeleteDataNotFound }\r\n        } else if (notFoundCount > 0) { // 部分数据不存在\r\n          return { ...responses.partialDeleteDataNotFound }\r\n        } else if (hasAssociatedDataCount === ids.length) { // 全部数据存在关联。适用于删除或批量删除\r\n          const res = responses.allDeleteDataAssociated\r\n          res.message += message\r\n          return res\r\n        } else if (hasAssociatedDataCount > 0) { // 部分数据存在关联\r\n          const res = responses.partialDeleteDataAssociated\r\n          res.message += message\r\n          return res\r\n        } else {\r\n          return { ...responses.deleteSuccess }\r\n        }\r\n      } catch {\r\n        return { ...responses.deleteFailure }\r\n      }\r\n    }\r\n  }\r\n]\r\n"]}]}