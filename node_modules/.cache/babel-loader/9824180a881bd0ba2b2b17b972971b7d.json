{"remainingRequest":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\system-manage\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\src\\views\\system-manage\\role.vue","mtime":1597568394935},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Neal Wang\\IdeaProjects\\mingxin_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container list\">\n    <div class=\"toolbar\">\n      <el-input v-model.trim=\"query.name\" class=\"query-item\" style=\"width: 120px\" placeholder=\"角色名\" clearable @clear=\"handleQuery\" />\n      <el-select v-model=\"query.type\" class=\"query-item\" style=\"width: 120px\" placeholder=\"角色类型\" clearable @clear=\"handleQuery\">\n        <el-option label=\"管理员\" value=\"1\" />\n        <el-option label=\"其他\" value=\"2\" />\n      </el-select>\n      <el-button class=\"tool tool-query\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleQuery\">查询</el-button>\n      <el-button v-if=\"access.create.allow\" class=\"tool tool-create\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">添加</el-button>\n      <el-button v-if=\"access.delete.allow\" class=\"tool tool-create\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleDeletes\">批量删除</el-button>\n    </div>\n\n    <el-table ref=\"listTable\" v-loading=\"loading.list\" v-adaptive=\"{ bottomOffset: 55 }\" height=\"200px\" :data=\"datas\" :default-sort=\"sort\" border fit highlight-current-row @sort-change=\"handleSort\">\n      <el-table-column type=\"selection\" align=\"center\" width=\"35\" />\n      <el-table-column label=\"序号\" type=\"index\" align=\"center\" width=\"65\" fixed>\n        <template slot-scope=\"scope\">\n          <span>{{ (page.current - 1) * page.size + scope.$index + 1 }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"角色名\" prop=\"name\" :sort-orders=\"sortOrders\" align=\"center\" width=\"100\" show-overflow-tooltip />\n      <el-table-column label=\"角色类型\" :sort-orders=\"sortOrders\" align=\"center\" width=\"80\" show-overflow-tooltip>\n        <template slot-scope=\"{row}\">\n          <span v-if=\"row.type=='0'\">开发人员</span>\n          <span v-if=\"row.type=='1'\">管理员</span>\n          <span v-if=\"row.type=='2'\">其他</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"备注\" prop=\"remark\" :sort-orders=\"sortOrders\" align=\"left\" show-overflow-tooltip />\n      <el-table-column fixed=\"right\" label=\"操作\" align=\"center\" width=\"180\">\n        <template slot-scope=\"{row}\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"详情\" placement=\"top-end\">\n            <el-button type=\"primary\" plain class=\"button-operate button-detail\" size=\"mini\" @click=\"handleDetail(row)\"><i class=\"vue-icon-detail\" /></el-button>\n          </el-tooltip>\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"编辑\" placement=\"top-end\">\n            <el-button type=\"primary\" plain class=\"button-operate button-update\" size=\"mini\" @click=\"handleUpdate(row)\"><i class=\"vue-icon-update\" /></el-button>\n          </el-tooltip>\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"删除\" placement=\"top-end\">\n            <el-button type=\"primary\" plain class=\"button-operate button-delete\" size=\"mini\" @click=\"handleDelete(row)\"><i class=\"vue-icon-delete\" /></el-button>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination :hidden=\"page.total==0\" :total=\"page.total\" :page.sync=\"page.current\" :limit.sync=\"page.size\" @pagination=\"getDatas\" />\n\n    <el-dialog v-loading=\"loading.detail\" custom-class=\"dialog-fullscreen dialog-detail\" :title=\"detail.dialog.title\" :visible.sync=\"detail.dialog.visible\" :modal=\"false\" :modal-append-to-body=\"false\">\n      <el-form ref=\"formDetail\" label-position=\"right\" :label-width=\"detail.dialog.labelWidth\">\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"角色名\">\n              {{ detail.models.name }}\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"角色类型\">\n              <span v-if=\"detail.models.type==0\">开发人员</span>\n              <span v-if=\"detail.models.type==1\">管理员</span>\n              <span v-if=\"detail.models.type==2\">其他</span>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"备注\">\n              {{ detail.models.remark }}\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-form-item label=\"拥有权限为如下\">\n          </el-form-item>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-tree :data=\"accessDetail\" :props=\"defaultProps\" />\n          </el-col>\n        </el-row>\n      </el-form>\n    </el-dialog>\n\n    <el-dialog custom-class=\"dialog-fullscreen dialog-create\" :title=\"create.dialog.title\" :visible.sync=\"create.dialog.visible\" :modal=\"false\" :modal-append-to-body=\"false\" :close-on-click-modal=\"false\">\n      <el-form ref=\"formCreate\" :rules=\"create.rules\" :model=\"create.models\" label-position=\"right\" :label-width=\"create.dialog.labelWidth\">\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"角色名\" prop=\"name\">\n              <el-input v-model=\"create.models.name\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"角色类型\" prop=\"type\">\n              <el-select v-model=\"create.models.type\" clearable>\n                <el-option label=\"开发人员\" value=\"0\" />\n                <el-option label=\"管理员\" value=\"1\" />\n                <el-option label=\"其他\" value=\"2\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :sl=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"create.models.remark\" type=\"textarea\"/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <tree-transfer :title=\"title\" :from_data=\"accessList\" :to_data=\"accessTo\" :default-props=\"{ label:'label' }\" mode=\"transfer\" height=\"540px\" filter open-all @addBtn=\"add\" @removeBtn=\"remove\" />\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"create.dialog.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"createData()\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog v-loading=\"loading.update\" custom-class=\"dialog-fullscreen dialog-update\" :title=\"update.dialog.title\" :visible.sync=\"update.dialog.visible\" :modal=\"false\" :modal-append-to-body=\"false\" :close-on-click-modal=\"false\">\n      <el-form ref=\"formUpdate\" :rules=\"update.rules\" :model=\"update.models\" label-position=\"right\" :label-width=\"update.dialog.labelWidth\">\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"角色名\" prop=\"name\">\n              <el-input v-model=\"update.models.name\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <el-form-item label=\"角色类型\" prop=\"type\">\n              <el-select v-model=\"update.models.type\" clearable>\n                <el-option v-for=\"item in type\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :sl=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"update.models.remark\" type=\"textarea\"/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :xl=\"6\" :md=\"12\" :sm=\"24\">\n            <tree-transfer :title=\"title\" :from_data=\"accessFrom\" :to_data=\"accessTo\" :default-props=\"{ label:'label' }\" mode=\"transfer\" height=\"540px\" filter open-all @addBtn=\"add\" @removeBtn=\"remove\" />\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"update.dialog.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"updateData()\">提交</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport adaptive from '@/directive/el-table'\nimport setRule from '@/utils/form-validate'\nimport Pagination from '@/components/Pagination'\nimport * as role from '@/api/system-manage/role'\nimport TreeTransfer from 'el-tree-transfer'\n\nexport default {\n  name: 'Role',\n  components: { Pagination, TreeTransfer },\n  directives: { adaptive },\n  data() {\n    return {\n      access: this.$store.getters.access['SystemManage']['Role'],\n      datas: null,\n      title: ['权限列表', '赋予权限'],\n      x: 0,\n      fromData: [\n        { id: 1, pid: 0, label: '货物管理' },\n        { id: 2, pid: 1, label: '货物颜色' },\n        { id: 3, pid: 1, label: 'no.3' },\n        { id: 4, pid: 1, label: 'no.4' },\n        { id: 5, pid: 1, label: 'no.5' },\n        { id: 6, pid: 2, label: 'no.6' },\n        { id: 7, pid: 2, label: 'no.7' },\n        { id: 8, pid: 2, label: 'no.8' }\n      ],\n      // 所有权限数据\n      accessList: [],\n      // 详情中权限数据\n      accessDetail: [],\n      // 修改中的未获得的权限\n      accessFrom: [],\n      // 修改或添加时，存放赋予的权限\n      accessTo: [],\n      type: [\n        { id: 0, name: '开发人员' },\n        { id: 1, name: '管理员' },\n        { id: 2, name: '其他' }\n      ],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      query: { name: null, type: null },\n      page: { total: 0, current: 1, size: 20 },\n      sort: { prop: 'sort', order: 'ascending' },\n      detail: {\n        dialog: { title: '角色信息', visible: false, labelWidth: '120px' },\n        models: { name: null, type: null, remark: null, access: [] }\n      },\n      create: {\n        dialog: { title: '添加角色', visible: false, labelWidth: '120px' },\n        models: { name: null, type: null, remark: null, access: [] },\n        rules: {\n          name: setRule('角色名称', [{ required: true }, { length: [0, 50] }]),\n          type: setRule('角色类型', [{ selected: true }]),\n          remark: setRule('备注', [{ length: [0, 255] }])\n        }\n      },\n      update: {\n        dialog: { title: '编辑角色信息', visible: false, labelWidth: '120px' },\n        models: { name: null, type: null, remark: null, access: null },\n        rules: {\n          name: setRule('角色名称', [{ required: true }, { length: [0, 50] }]),\n          type: setRule('角色类别', [{ selected: true }]),\n          remark: setRule('备注', [{ length: [0, 255] }])\n        }\n      },\n      loading: { list: true, export: false, detail: false, update: false },\n      sortOrders: ['ascending', 'descending']\n    }\n  },\n  created() {\n    this.getDatas()\n    this.getAllAccess()\n  },\n  methods: {\n    getDatas() {\n      this.loading.list = true\n      role.getList(this.query, this.page, this.sort).then(response => {\n        this.datas = response.data.items\n        this.page.total = response.data.total\n        this.loading.list = false\n      }).catch(reject => {\n        this.loading.list = false\n      })\n    },\n    // 数组转为Tree\n    arrayToTree(list, pid = null) {\n      return list.filter(item => item.pid === pid).map(item => ({\n        ...item,\n        children: this.arrayToTree(list, item.id)\n      }))\n    },\n    arrayToTree2(list, pid = 0) {\n      return list.filter(item => item.pid === pid).map(item => ({\n        ...item,\n        children: this.arrayToTree(list, item.id)\n      }))\n    },\n    // Tree转为array\n    treeToArray(data) {\n      return data.reduce((arr, { id, label, pid, children = [] }) =>\n        arr.concat([{ id, label, pid }], this.treeToArray(children, id)), [])\n    },\n    getAllAccess() {\n      role.getAllAccess().then(response => {\n        this.accessList = this.arrayToTree(response.data)\n      }).catch(reject => {\n      })\n    },\n    handleQuery() {\n      this.page.current = 1\n      this.getDatas()\n    },\n    handleSort(data) {\n      this.sort.prop = data.prop\n      this.sort.order = data.order\n      this.getDatas()\n    },\n    handleDetail(row) {\n      // 若列表数据展示了全部属性，则可直接拷贝列表数据\n      this.detail.dialog.visible = true\n      this.loading.detail = true\n      role.get(row.id).then(response => {\n        this.detail.models = response.data.role\n        console.log(response)\n        // 获取此id的access，转成tree\n        this.accessDetail = this.arrayToTree(response.data.access)\n        this.loading.detail = false\n      }).catch(reject => {\n        this.loading.detail = false\n      })\n    },\n    // 监听穿梭框组件添加, accessTo用来接受添加与修改中的 赋予权限数据\n    add(fromData, toData, obj) {\n      this.accessTo = toData\n    },\n    // 监听穿梭框组件移除, toData为右侧权限数据\n    remove(fromData, toData, obj) {\n      this.accessTo = toData\n    },\n    handleCreate() {\n      this.create.dialog.visible = true\n      this.x = 1\n      console.log(this.accessList)\n    },\n    createData() {\n      this.$refs['formCreate'].validate((valid) => {\n        if (!valid) return false\n        if (this.accessTo !== []) {\n          this.create.models.access = this.treeToArray(this.accessTo)\n        } else {\n          this.create.models.access = []\n        }\n        role.create(this.create.models).then(response => {\n          // 为方便连续添加，create对话框不关闭\n          // 需要清空的表单，手动清空，至少清空一个必填项，防止点击两遍\n          this.create.models.name = ''\n          // 因为添加修改共用了accessTo，进行清空操作\n          this.accessTo = []\n          // 重新获取数据\n          this.getDatas()\n        }).catch(reject => {\n        })\n      })\n    },\n    // 一个数组去掉另一个数组中的对象\n    moveToData(fromData, toData) {\n      const idList = toData.map(v => v.id)\n      // console.log(idList)\n      fromData = fromData.filter(item => {\n        return !idList.includes(item.id)\n      })\n      return fromData\n    },\n    handleUpdate(row) {\n      // 若列表数据展示了全部属性，则可直接拷贝列表数据用于编辑\n      // this.handleDetail(row)\n      this.loading.update = true\n      role.get(row.id).then(response => {\n        this.detail.models = response.data.role\n        // console.log(response)\n        // 获取此id的access，转成tree\n        this.accessDetail = this.arrayToTree(response.data.access)\n        // console.log(this.detail.models)\n        this.update.models = Object.assign({}, this.detail.models)\n        // console.log(this.update.models)\n        // 获取当前已有权限: tree型\n        this.accessTo = this.accessDetail\n        // 所有权限去掉当前权限 = 未获得权限: accessfrom: array\n        const accessfrom = this.moveToData(this.treeToArray(this.accessList), this.treeToArray(this.accessTo))\n        console.log(accessfrom)\n        // console.log(this.treeToArray(this.accessList))\n        // console.log(this.treeToArray(this.accessTo))\n        if (this.x === 0) {\n          this.accessFrom = this.arrayToTree(accessfrom)\n        }\n        if (this.x === 1) {\n          this.accessFrom = this.arrayToTree2(accessfrom)\n        }\n        console.log(this.accessFrom)\n        this.loading.update = false\n        this.update.dialog.visible = true\n      }).catch(reject => {\n        this.loading.update = false\n      })\n\n      this.$nextTick(() => {\n        this.$refs['formUpdate'].clearValidate()\n      })\n    },\n    updateData() {\n      this.$refs['formUpdate'].validate((valid) => {\n        if (!valid) return false\n        this.update.models.access = this.treeToArray(this.accessTo)\n        const tempData = Object.assign({}, this.update.models)\n        role.update(tempData).then(response => {\n          // 重新获取数据\n          this.getDatas()\n          this.update.dialog.visible = false\n          this.accessTo = []\n        }).catch(reject => {\n        })\n      })\n    },\n    handleDelete(row) {\n      this.deleteData([row.id])\n    },\n    handleDeletes(row) {\n      if (this.$refs.listTable.selection.length === 0) {\n        this.$message({ type: 'warning', message: '请在下面表格的左侧勾选需要删除的数据', duration: 4000 })\n        return false\n      }\n      const ids = []\n      for (const item of this.$refs.listTable.selection) {\n        ids.push(item.id)\n      }\n      this.deleteData(ids)\n    },\n    deleteData(ids) {\n      this.$confirm('数据删除后，不可恢复, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        role.del(ids).then(response => {\n          // 重新获取数据\n          this.getDatas()\n        }).catch(reject => {\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n"],"sourceRoot":"src/views/system-manage"}]}